/*
 * generated by Xtext 2.25.0
 */
package tau.smlab.syntech.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import tau.smlab.syntech.ide.contentassist.antlr.internal.InternalSpectraParser;
import tau.smlab.syntech.services.SpectraGrammarAccess;

public class SpectraParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(SpectraGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, SpectraGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getModelAccess().getAlternatives_1(), "rule__Model__Alternatives_1");
			builder.put(grammarAccess.getDeclAccess().getAlternatives(), "rule__Decl__Alternatives");
			builder.put(grammarAccess.getReferrableAccess().getAlternatives(), "rule__Referrable__Alternatives");
			builder.put(grammarAccess.getTypeConstantLiteralAccess().getAlternatives(), "rule__TypeConstantLiteral__Alternatives");
			builder.put(grammarAccess.getDefineDeclAccess().getAlternatives_0(), "rule__DefineDecl__Alternatives_0");
			builder.put(grammarAccess.getDefineArrayAccess().getAlternatives(), "rule__DefineArray__Alternatives");
			builder.put(grammarAccess.getCounterAccess().getAlternatives_4_0(), "rule__Counter__Alternatives_4_0");
			builder.put(grammarAccess.getMonitorAccess().getAlternatives_4_0(), "rule__Monitor__Alternatives_4_0");
			builder.put(grammarAccess.getMonitorAccess().getAlternatives_4_0_0_0(), "rule__Monitor__Alternatives_4_0_0_0");
			builder.put(grammarAccess.getMonitorAccess().getAlternatives_4_0_1_0(), "rule__Monitor__Alternatives_4_0_1_0");
			builder.put(grammarAccess.getMonitorAccess().getAlternatives_4_0_2_0(), "rule__Monitor__Alternatives_4_0_2_0");
			builder.put(grammarAccess.getPatternAccess().getAlternatives_3_2_0(), "rule__Pattern__Alternatives_3_2_0");
			builder.put(grammarAccess.getPatternAccess().getAlternatives_3_2_0_0_0(), "rule__Pattern__Alternatives_3_2_0_0_0");
			builder.put(grammarAccess.getPatternAccess().getAlternatives_3_2_0_1_0(), "rule__Pattern__Alternatives_3_2_0_1_0");
			builder.put(grammarAccess.getPatternAccess().getAlternatives_3_2_0_2_0(), "rule__Pattern__Alternatives_3_2_0_2_0");
			builder.put(grammarAccess.getPatternAccess().getAlternatives_3_2_0_3_0(), "rule__Pattern__Alternatives_3_2_0_3_0");
			builder.put(grammarAccess.getPredicateAccess().getAlternatives_2(), "rule__Predicate__Alternatives_2");
			builder.put(grammarAccess.getPredicateAccess().getAlternatives_3(), "rule__Predicate__Alternatives_3");
			builder.put(grammarAccess.getVarTypeAccess().getAlternatives_0(), "rule__VarType__Alternatives_0");
			builder.put(grammarAccess.getLTLGarAccess().getAlternatives_0(), "rule__LTLGar__Alternatives_0");
			builder.put(grammarAccess.getLTLGarAccess().getAlternatives_2(), "rule__LTLGar__Alternatives_2");
			builder.put(grammarAccess.getLTLGarAccess().getAlternatives_2_0_0(), "rule__LTLGar__Alternatives_2_0_0");
			builder.put(grammarAccess.getLTLGarAccess().getSafetyAlternatives_2_0_0_2_0(), "rule__LTLGar__SafetyAlternatives_2_0_0_2_0");
			builder.put(grammarAccess.getLTLGarAccess().getStateInvAlternatives_2_0_0_3_0(), "rule__LTLGar__StateInvAlternatives_2_0_0_3_0");
			builder.put(grammarAccess.getLTLGarAccess().getJusticeAlternatives_2_0_0_4_0(), "rule__LTLGar__JusticeAlternatives_2_0_0_4_0");
			builder.put(grammarAccess.getLTLAsmAccess().getAlternatives_0(), "rule__LTLAsm__Alternatives_0");
			builder.put(grammarAccess.getLTLAsmAccess().getAlternatives_2(), "rule__LTLAsm__Alternatives_2");
			builder.put(grammarAccess.getLTLAsmAccess().getAlternatives_2_0_0(), "rule__LTLAsm__Alternatives_2_0_0");
			builder.put(grammarAccess.getLTLAsmAccess().getSafetyAlternatives_2_0_0_2_0(), "rule__LTLAsm__SafetyAlternatives_2_0_0_2_0");
			builder.put(grammarAccess.getLTLAsmAccess().getStateInvAlternatives_2_0_0_3_0(), "rule__LTLAsm__StateInvAlternatives_2_0_0_3_0");
			builder.put(grammarAccess.getLTLAsmAccess().getJusticeAlternatives_2_0_0_4_0(), "rule__LTLAsm__JusticeAlternatives_2_0_0_4_0");
			builder.put(grammarAccess.getEXGarAccess().getAlternatives_0(), "rule__EXGar__Alternatives_0");
			builder.put(grammarAccess.getEXGarAccess().getAlternatives_2(), "rule__EXGar__Alternatives_2");
			builder.put(grammarAccess.getTemporalImpExprAccess().getOperatorAlternatives_1_1_0(), "rule__TemporalImpExpr__OperatorAlternatives_1_1_0");
			builder.put(grammarAccess.getTemporalIffExprAccess().getOperatorAlternatives_1_1_0(), "rule__TemporalIffExpr__OperatorAlternatives_1_1_0");
			builder.put(grammarAccess.getTemporalOrExprAccess().getOperatorAlternatives_1_1_0(), "rule__TemporalOrExpr__OperatorAlternatives_1_1_0");
			builder.put(grammarAccess.getTemporalAndExprAccess().getOperatorAlternatives_1_1_0(), "rule__TemporalAndExpr__OperatorAlternatives_1_1_0");
			builder.put(grammarAccess.getTemporalRelationalExprAccess().getOperatorAlternatives_1_1_0(), "rule__TemporalRelationalExpr__OperatorAlternatives_1_1_0");
			builder.put(grammarAccess.getTemporalRemainderExprAccess().getOperatorAlternatives_1_1_0(), "rule__TemporalRemainderExpr__OperatorAlternatives_1_1_0");
			builder.put(grammarAccess.getTemporalAdditiveExprAccess().getOperatorAlternatives_1_1_0(), "rule__TemporalAdditiveExpr__OperatorAlternatives_1_1_0");
			builder.put(grammarAccess.getTemporalMultiplicativeExprAccess().getOperatorAlternatives_1_1_0(), "rule__TemporalMultiplicativeExpr__OperatorAlternatives_1_1_0");
			builder.put(grammarAccess.getTemporalBinaryExprAccess().getOperatorAlternatives_1_1_0(), "rule__TemporalBinaryExpr__OperatorAlternatives_1_1_0");
			builder.put(grammarAccess.getTemporalUnaryExprAccess().getAlternatives(), "rule__TemporalUnaryExpr__Alternatives");
			builder.put(grammarAccess.getTemporalUnaryExprAccess().getAlternatives_1_1(), "rule__TemporalUnaryExpr__Alternatives_1_1");
			builder.put(grammarAccess.getTemporalUnaryExprAccess().getKindsAlternatives_1_1_0_0_0(), "rule__TemporalUnaryExpr__KindsAlternatives_1_1_0_0_0");
			builder.put(grammarAccess.getTemporalUnaryExprAccess().getKindsAlternatives_1_1_1_0_0(), "rule__TemporalUnaryExpr__KindsAlternatives_1_1_1_0_0");
			builder.put(grammarAccess.getTemporalUnaryExprAccess().getKindsAlternatives_1_1_2_0_0(), "rule__TemporalUnaryExpr__KindsAlternatives_1_1_2_0_0");
			builder.put(grammarAccess.getTemporalPrimaryExprAccess().getAlternatives(), "rule__TemporalPrimaryExpr__Alternatives");
			builder.put(grammarAccess.getTemporalPrimaryExprAccess().getAlternatives_2_1(), "rule__TemporalPrimaryExpr__Alternatives_2_1");
			builder.put(grammarAccess.getTemporalPrimaryExprAccess().getAlternatives_2_1_0_1(), "rule__TemporalPrimaryExpr__Alternatives_2_1_0_1");
			builder.put(grammarAccess.getTemporalPrimaryExprAccess().getOperatorAlternatives_2_1_1_0_0(), "rule__TemporalPrimaryExpr__OperatorAlternatives_2_1_1_0_0");
			builder.put(grammarAccess.getTemporalPrimaryExprAccess().getAlternatives_2_1_4_2(), "rule__TemporalPrimaryExpr__Alternatives_2_1_4_2");
			builder.put(grammarAccess.getPredicateOrPatternReferrableAccess().getAlternatives(), "rule__PredicateOrPatternReferrable__Alternatives");
			builder.put(grammarAccess.getConstantAccess().getAlternatives_1(), "rule__Constant__Alternatives_1");
			builder.put(grammarAccess.getTriggerAccess().getAlternatives_2(), "rule__Trigger__Alternatives_2");
			builder.put(grammarAccess.getTriggerAccess().getAlternatives_4(), "rule__Trigger__Alternatives_4");
			builder.put(grammarAccess.getBinaryRegExpAccess().getOpAlternatives_1_1_0(), "rule__BinaryRegExp__OpAlternatives_1_1_0");
			builder.put(grammarAccess.getUnaryRegExpAccess().getAlternatives_1_1(), "rule__UnaryRegExp__Alternatives_1_1");
			builder.put(grammarAccess.getUnaryRegExpAccess().getAlternatives_1_1_5_1(), "rule__UnaryRegExp__Alternatives_1_1_5_1");
			builder.put(grammarAccess.getUnaryRegExpAccess().getAlternatives_1_1_5_3(), "rule__UnaryRegExp__Alternatives_1_1_5_3");
			builder.put(grammarAccess.getCompRegExpAccess().getAlternatives(), "rule__CompRegExp__Alternatives");
			builder.put(grammarAccess.getPrimaryRegExpAccess().getAlternatives(), "rule__PrimaryRegExp__Alternatives");
			builder.put(grammarAccess.getPrimaryRegExpAccess().getValAlternatives_1_0(), "rule__PrimaryRegExp__ValAlternatives_1_0");
			builder.put(grammarAccess.getValueInRangeAccess().getAlternatives(), "rule__ValueInRange__Alternatives");
			builder.put(grammarAccess.getValueInRangeAccess().getBooleanValueAlternatives_3_0(), "rule__ValueInRange__BooleanValueAlternatives_3_0");
			builder.put(grammarAccess.getQuantifierExprAccess().getAlternatives(), "rule__QuantifierExpr__Alternatives");
			builder.put(grammarAccess.getQuantifierExprAccess().getOperatorAlternatives_1_1_0_0(), "rule__QuantifierExpr__OperatorAlternatives_1_1_0_0");
			builder.put(grammarAccess.getSizeDefineDeclAccess().getAlternatives(), "rule__SizeDefineDecl__Alternatives");
			builder.put(grammarAccess.getVarOwnerAccess().getAlternatives(), "rule__VarOwner__Alternatives");
			builder.put(grammarAccess.getOverflowMethodAccess().getAlternatives(), "rule__OverflowMethod__Alternatives");
			builder.put(grammarAccess.getModelAccess().getGroup(), "rule__Model__Group__0");
			builder.put(grammarAccess.getImportAccess().getGroup(), "rule__Import__Group__0");
			builder.put(grammarAccess.getWeightDefAccess().getGroup(), "rule__WeightDef__Group__0");
			builder.put(grammarAccess.getWeightDefAccess().getGroup_1(), "rule__WeightDef__Group_1__0");
			builder.put(grammarAccess.getVarAccess().getGroup(), "rule__Var__Group__0");
			builder.put(grammarAccess.getTypeDefAccess().getGroup(), "rule__TypeDef__Group__0");
			builder.put(grammarAccess.getVarDeclAccess().getGroup(), "rule__VarDecl__Group__0");
			builder.put(grammarAccess.getDefineAccess().getGroup(), "rule__Define__Group__0");
			builder.put(grammarAccess.getDefineDeclAccess().getGroup(), "rule__DefineDecl__Group__0");
			builder.put(grammarAccess.getDefineDeclAccess().getGroup_0_0(), "rule__DefineDecl__Group_0_0__0");
			builder.put(grammarAccess.getDefineDeclAccess().getGroup_0_1(), "rule__DefineDecl__Group_0_1__0");
			builder.put(grammarAccess.getDefineDeclAccess().getGroup_0_1_1(), "rule__DefineDecl__Group_0_1_1__0");
			builder.put(grammarAccess.getDefineArrayAccess().getGroup_0(), "rule__DefineArray__Group_0__0");
			builder.put(grammarAccess.getDefineArrayAccess().getGroup_0_1(), "rule__DefineArray__Group_0_1__0");
			builder.put(grammarAccess.getDefineArrayAccess().getGroup_0_1_1(), "rule__DefineArray__Group_0_1_1__0");
			builder.put(grammarAccess.getDefineArrayAccess().getGroup_1(), "rule__DefineArray__Group_1__0");
			builder.put(grammarAccess.getDefineArrayAccess().getGroup_1_1(), "rule__DefineArray__Group_1_1__0");
			builder.put(grammarAccess.getDefineArrayAccess().getGroup_1_1_1(), "rule__DefineArray__Group_1_1_1__0");
			builder.put(grammarAccess.getDefineRegExpAccess().getGroup(), "rule__DefineRegExp__Group__0");
			builder.put(grammarAccess.getDefineRegExpDeclAccess().getGroup(), "rule__DefineRegExpDecl__Group__0");
			builder.put(grammarAccess.getPatternParamListAccess().getGroup(), "rule__PatternParamList__Group__0");
			builder.put(grammarAccess.getPatternParamListAccess().getGroup_1(), "rule__PatternParamList__Group_1__0");
			builder.put(grammarAccess.getTypedParamListAccess().getGroup(), "rule__TypedParamList__Group__0");
			builder.put(grammarAccess.getTypedParamListAccess().getGroup_1(), "rule__TypedParamList__Group_1__0");
			builder.put(grammarAccess.getTypedParamAccess().getGroup(), "rule__TypedParam__Group__0");
			builder.put(grammarAccess.getCounterAccess().getGroup(), "rule__Counter__Group__0");
			builder.put(grammarAccess.getCounterAccess().getGroup_2(), "rule__Counter__Group_2__0");
			builder.put(grammarAccess.getCounterAccess().getGroup_4(), "rule__Counter__Group_4__0");
			builder.put(grammarAccess.getCounterAccess().getGroup_4_0_1(), "rule__Counter__Group_4_0_1__0");
			builder.put(grammarAccess.getCounterAccess().getGroup_4_0_2(), "rule__Counter__Group_4_0_2__0");
			builder.put(grammarAccess.getCounterAccess().getGroup_4_0_3(), "rule__Counter__Group_4_0_3__0");
			builder.put(grammarAccess.getCounterAccess().getGroup_4_0_4(), "rule__Counter__Group_4_0_4__0");
			builder.put(grammarAccess.getCounterAccess().getGroup_4_0_5(), "rule__Counter__Group_4_0_5__0");
			builder.put(grammarAccess.getMonitorAccess().getGroup(), "rule__Monitor__Group__0");
			builder.put(grammarAccess.getMonitorAccess().getGroup_4(), "rule__Monitor__Group_4__0");
			builder.put(grammarAccess.getMonitorAccess().getGroup_4_0_0(), "rule__Monitor__Group_4_0_0__0");
			builder.put(grammarAccess.getMonitorAccess().getGroup_4_0_1(), "rule__Monitor__Group_4_0_1__0");
			builder.put(grammarAccess.getMonitorAccess().getGroup_4_0_2(), "rule__Monitor__Group_4_0_2__0");
			builder.put(grammarAccess.getPatternAccess().getGroup(), "rule__Pattern__Group__0");
			builder.put(grammarAccess.getPatternAccess().getGroup_2(), "rule__Pattern__Group_2__0");
			builder.put(grammarAccess.getPatternAccess().getGroup_3(), "rule__Pattern__Group_3__0");
			builder.put(grammarAccess.getPatternAccess().getGroup_3_1(), "rule__Pattern__Group_3_1__0");
			builder.put(grammarAccess.getPatternAccess().getGroup_3_2(), "rule__Pattern__Group_3_2__0");
			builder.put(grammarAccess.getPatternAccess().getGroup_3_2_0_0(), "rule__Pattern__Group_3_2_0_0__0");
			builder.put(grammarAccess.getPatternAccess().getGroup_3_2_0_1(), "rule__Pattern__Group_3_2_0_1__0");
			builder.put(grammarAccess.getPatternAccess().getGroup_3_2_0_2(), "rule__Pattern__Group_3_2_0_2__0");
			builder.put(grammarAccess.getPatternAccess().getGroup_3_2_0_3(), "rule__Pattern__Group_3_2_0_3__0");
			builder.put(grammarAccess.getPredicateAccess().getGroup(), "rule__Predicate__Group__0");
			builder.put(grammarAccess.getPredicateAccess().getGroup_2_0(), "rule__Predicate__Group_2_0__0");
			builder.put(grammarAccess.getPredicateAccess().getGroup_3_0(), "rule__Predicate__Group_3_0__0");
			builder.put(grammarAccess.getPredicateAccess().getGroup_3_1(), "rule__Predicate__Group_3_1__0");
			builder.put(grammarAccess.getVarTypeAccess().getGroup(), "rule__VarType__Group__0");
			builder.put(grammarAccess.getVarTypeAccess().getGroup_0_1(), "rule__VarType__Group_0_1__0");
			builder.put(grammarAccess.getVarTypeAccess().getGroup_0_2(), "rule__VarType__Group_0_2__0");
			builder.put(grammarAccess.getVarTypeAccess().getGroup_0_2_2(), "rule__VarType__Group_0_2_2__0");
			builder.put(grammarAccess.getVarTypeAccess().getGroup_1(), "rule__VarType__Group_1__0");
			builder.put(grammarAccess.getLTLGarAccess().getGroup(), "rule__LTLGar__Group__0");
			builder.put(grammarAccess.getLTLGarAccess().getGroup_1(), "rule__LTLGar__Group_1__0");
			builder.put(grammarAccess.getLTLGarAccess().getGroup_1_1(), "rule__LTLGar__Group_1_1__0");
			builder.put(grammarAccess.getLTLGarAccess().getGroup_2_0(), "rule__LTLGar__Group_2_0__0");
			builder.put(grammarAccess.getLTLAsmAccess().getGroup(), "rule__LTLAsm__Group__0");
			builder.put(grammarAccess.getLTLAsmAccess().getGroup_1(), "rule__LTLAsm__Group_1__0");
			builder.put(grammarAccess.getLTLAsmAccess().getGroup_1_1(), "rule__LTLAsm__Group_1_1__0");
			builder.put(grammarAccess.getLTLAsmAccess().getGroup_2_0(), "rule__LTLAsm__Group_2_0__0");
			builder.put(grammarAccess.getEXGarAccess().getGroup(), "rule__EXGar__Group__0");
			builder.put(grammarAccess.getEXGarAccess().getGroup_1(), "rule__EXGar__Group_1__0");
			builder.put(grammarAccess.getEXGarAccess().getGroup_2_0(), "rule__EXGar__Group_2_0__0");
			builder.put(grammarAccess.getEXGarAccess().getGroup_2_0_2(), "rule__EXGar__Group_2_0_2__0");
			builder.put(grammarAccess.getEXGarAccess().getGroup_2_1(), "rule__EXGar__Group_2_1__0");
			builder.put(grammarAccess.getEXGarAccess().getGroup_2_2(), "rule__EXGar__Group_2_2__0");
			builder.put(grammarAccess.getTemporalInExprAccess().getGroup(), "rule__TemporalInExpr__Group__0");
			builder.put(grammarAccess.getTemporalInExprAccess().getGroup_1(), "rule__TemporalInExpr__Group_1__0");
			builder.put(grammarAccess.getTemporalInExprAccess().getGroup_1_5(), "rule__TemporalInExpr__Group_1_5__0");
			builder.put(grammarAccess.getTemporalImpExprAccess().getGroup(), "rule__TemporalImpExpr__Group__0");
			builder.put(grammarAccess.getTemporalImpExprAccess().getGroup_1(), "rule__TemporalImpExpr__Group_1__0");
			builder.put(grammarAccess.getTemporalIffExprAccess().getGroup(), "rule__TemporalIffExpr__Group__0");
			builder.put(grammarAccess.getTemporalIffExprAccess().getGroup_1(), "rule__TemporalIffExpr__Group_1__0");
			builder.put(grammarAccess.getTemporalOrExprAccess().getGroup(), "rule__TemporalOrExpr__Group__0");
			builder.put(grammarAccess.getTemporalOrExprAccess().getGroup_1(), "rule__TemporalOrExpr__Group_1__0");
			builder.put(grammarAccess.getTemporalAndExprAccess().getGroup(), "rule__TemporalAndExpr__Group__0");
			builder.put(grammarAccess.getTemporalAndExprAccess().getGroup_1(), "rule__TemporalAndExpr__Group_1__0");
			builder.put(grammarAccess.getTemporalRelationalExprAccess().getGroup(), "rule__TemporalRelationalExpr__Group__0");
			builder.put(grammarAccess.getTemporalRelationalExprAccess().getGroup_1(), "rule__TemporalRelationalExpr__Group_1__0");
			builder.put(grammarAccess.getTemporalRemainderExprAccess().getGroup(), "rule__TemporalRemainderExpr__Group__0");
			builder.put(grammarAccess.getTemporalRemainderExprAccess().getGroup_1(), "rule__TemporalRemainderExpr__Group_1__0");
			builder.put(grammarAccess.getTemporalAdditiveExprAccess().getGroup(), "rule__TemporalAdditiveExpr__Group__0");
			builder.put(grammarAccess.getTemporalAdditiveExprAccess().getGroup_1(), "rule__TemporalAdditiveExpr__Group_1__0");
			builder.put(grammarAccess.getTemporalMultiplicativeExprAccess().getGroup(), "rule__TemporalMultiplicativeExpr__Group__0");
			builder.put(grammarAccess.getTemporalMultiplicativeExprAccess().getGroup_1(), "rule__TemporalMultiplicativeExpr__Group_1__0");
			builder.put(grammarAccess.getTemporalBinaryExprAccess().getGroup(), "rule__TemporalBinaryExpr__Group__0");
			builder.put(grammarAccess.getTemporalBinaryExprAccess().getGroup_1(), "rule__TemporalBinaryExpr__Group_1__0");
			builder.put(grammarAccess.getTemporalUnaryExprAccess().getGroup_1(), "rule__TemporalUnaryExpr__Group_1__0");
			builder.put(grammarAccess.getTemporalUnaryExprAccess().getGroup_1_1_0(), "rule__TemporalUnaryExpr__Group_1_1_0__0");
			builder.put(grammarAccess.getTemporalUnaryExprAccess().getGroup_1_1_1(), "rule__TemporalUnaryExpr__Group_1_1_1__0");
			builder.put(grammarAccess.getTemporalUnaryExprAccess().getGroup_1_1_2(), "rule__TemporalUnaryExpr__Group_1_1_2__0");
			builder.put(grammarAccess.getTemporalPrimaryExprAccess().getGroup_1(), "rule__TemporalPrimaryExpr__Group_1__0");
			builder.put(grammarAccess.getTemporalPrimaryExprAccess().getGroup_2(), "rule__TemporalPrimaryExpr__Group_2__0");
			builder.put(grammarAccess.getTemporalPrimaryExprAccess().getGroup_2_1_0(), "rule__TemporalPrimaryExpr__Group_2_1_0__0");
			builder.put(grammarAccess.getTemporalPrimaryExprAccess().getGroup_2_1_0_1_0(), "rule__TemporalPrimaryExpr__Group_2_1_0_1_0__0");
			builder.put(grammarAccess.getTemporalPrimaryExprAccess().getGroup_2_1_0_1_0_2(), "rule__TemporalPrimaryExpr__Group_2_1_0_1_0_2__0");
			builder.put(grammarAccess.getTemporalPrimaryExprAccess().getGroup_2_1_1(), "rule__TemporalPrimaryExpr__Group_2_1_1__0");
			builder.put(grammarAccess.getTemporalPrimaryExprAccess().getGroup_2_1_2(), "rule__TemporalPrimaryExpr__Group_2_1_2__0");
			builder.put(grammarAccess.getTemporalPrimaryExprAccess().getGroup_2_1_2_1(), "rule__TemporalPrimaryExpr__Group_2_1_2_1__0");
			builder.put(grammarAccess.getTemporalPrimaryExprAccess().getGroup_2_1_3(), "rule__TemporalPrimaryExpr__Group_2_1_3__0");
			builder.put(grammarAccess.getTemporalPrimaryExprAccess().getGroup_2_1_4(), "rule__TemporalPrimaryExpr__Group_2_1_4__0");
			builder.put(grammarAccess.getTemporalPrimaryExprAccess().getGroup_2_1_5(), "rule__TemporalPrimaryExpr__Group_2_1_5__0");
			builder.put(grammarAccess.getTemporalPrimaryExprAccess().getGroup_2_1_6(), "rule__TemporalPrimaryExpr__Group_2_1_6__0");
			builder.put(grammarAccess.getTemporalPrimaryExprAccess().getGroup_2_1_7(), "rule__TemporalPrimaryExpr__Group_2_1_7__0");
			builder.put(grammarAccess.getTemporalPrimaryExprAccess().getGroup_2_1_8(), "rule__TemporalPrimaryExpr__Group_2_1_8__0");
			builder.put(grammarAccess.getTemporalPrimaryExprAccess().getGroup_2_1_9(), "rule__TemporalPrimaryExpr__Group_2_1_9__0");
			builder.put(grammarAccess.getTemporalPrimaryExprAccess().getGroup_2_1_10(), "rule__TemporalPrimaryExpr__Group_2_1_10__0");
			builder.put(grammarAccess.getSubrangeAccess().getGroup(), "rule__Subrange__Group__0");
			builder.put(grammarAccess.getConstantAccess().getGroup(), "rule__Constant__Group__0");
			builder.put(grammarAccess.getTriggerAccess().getGroup(), "rule__Trigger__Group__0");
			builder.put(grammarAccess.getBinaryRegExpAccess().getGroup(), "rule__BinaryRegExp__Group__0");
			builder.put(grammarAccess.getBinaryRegExpAccess().getGroup_1(), "rule__BinaryRegExp__Group_1__0");
			builder.put(grammarAccess.getUnaryRegExpAccess().getGroup(), "rule__UnaryRegExp__Group__0");
			builder.put(grammarAccess.getUnaryRegExpAccess().getGroup_1(), "rule__UnaryRegExp__Group_1__0");
			builder.put(grammarAccess.getUnaryRegExpAccess().getGroup_1_1_3(), "rule__UnaryRegExp__Group_1_1_3__0");
			builder.put(grammarAccess.getUnaryRegExpAccess().getGroup_1_1_4(), "rule__UnaryRegExp__Group_1_1_4__0");
			builder.put(grammarAccess.getUnaryRegExpAccess().getGroup_1_1_5(), "rule__UnaryRegExp__Group_1_1_5__0");
			builder.put(grammarAccess.getCompRegExpAccess().getGroup_1(), "rule__CompRegExp__Group_1__0");
			builder.put(grammarAccess.getPrimaryRegExpAccess().getGroup_0(), "rule__PrimaryRegExp__Group_0__0");
			builder.put(grammarAccess.getBooleanTermAccess().getGroup(), "rule__BooleanTerm__Group__0");
			builder.put(grammarAccess.getValueInRangeAccess().getGroup_2(), "rule__ValueInRange__Group_2__0");
			builder.put(grammarAccess.getQuantifierExprAccess().getGroup_1(), "rule__QuantifierExpr__Group_1__0");
			builder.put(grammarAccess.getQuantifierExprAccess().getGroup_1_1(), "rule__QuantifierExpr__Group_1_1__0");
			builder.put(grammarAccess.getDomainVarDeclAccess().getGroup(), "rule__DomainVarDecl__Group__0");
			builder.put(grammarAccess.getSizeDefineDeclAccess().getGroup_2(), "rule__SizeDefineDecl__Group_2__0");
			builder.put(grammarAccess.getModelAccess().getImportsAssignment_0(), "rule__Model__ImportsAssignment_0");
			builder.put(grammarAccess.getModelAccess().getNameAssignment_2(), "rule__Model__NameAssignment_2");
			builder.put(grammarAccess.getModelAccess().getElementsAssignment_3(), "rule__Model__ElementsAssignment_3");
			builder.put(grammarAccess.getImportAccess().getImportURIAssignment_1(), "rule__Import__ImportURIAssignment_1");
			builder.put(grammarAccess.getWeightDefAccess().getNameAssignment_1_0(), "rule__WeightDef__NameAssignment_1_0");
			builder.put(grammarAccess.getWeightDefAccess().getNegativeAssignment_2(), "rule__WeightDef__NegativeAssignment_2");
			builder.put(grammarAccess.getWeightDefAccess().getValueAssignment_3(), "rule__WeightDef__ValueAssignment_3");
			builder.put(grammarAccess.getWeightDefAccess().getDefinitionAssignment_4(), "rule__WeightDef__DefinitionAssignment_4");
			builder.put(grammarAccess.getVarAccess().getKindAssignment_0(), "rule__Var__KindAssignment_0");
			builder.put(grammarAccess.getVarAccess().getVarAssignment_1(), "rule__Var__VarAssignment_1");
			builder.put(grammarAccess.getTypeDefAccess().getNameAssignment_1(), "rule__TypeDef__NameAssignment_1");
			builder.put(grammarAccess.getTypeDefAccess().getTypeAssignment_3(), "rule__TypeDef__TypeAssignment_3");
			builder.put(grammarAccess.getVarDeclAccess().getTypeAssignment_0(), "rule__VarDecl__TypeAssignment_0");
			builder.put(grammarAccess.getVarDeclAccess().getNameAssignment_1(), "rule__VarDecl__NameAssignment_1");
			builder.put(grammarAccess.getTypeConstantAccess().getNameAssignment(), "rule__TypeConstant__NameAssignment");
			builder.put(grammarAccess.getDefineAccess().getDefineListAssignment_1(), "rule__Define__DefineListAssignment_1");
			builder.put(grammarAccess.getDefineDeclAccess().getNameAssignment_0_0_0(), "rule__DefineDecl__NameAssignment_0_0_0");
			builder.put(grammarAccess.getDefineDeclAccess().getSimpleExprAssignment_0_0_2(), "rule__DefineDecl__SimpleExprAssignment_0_0_2");
			builder.put(grammarAccess.getDefineDeclAccess().getNameAssignment_0_1_0(), "rule__DefineDecl__NameAssignment_0_1_0");
			builder.put(grammarAccess.getDefineDeclAccess().getDimensionsAssignment_0_1_1_1(), "rule__DefineDecl__DimensionsAssignment_0_1_1_1");
			builder.put(grammarAccess.getDefineDeclAccess().getInnerArrayAssignment_0_1_3(), "rule__DefineDecl__InnerArrayAssignment_0_1_3");
			builder.put(grammarAccess.getDefineArrayAccess().getSimpleExprsAssignment_0_1_0(), "rule__DefineArray__SimpleExprsAssignment_0_1_0");
			builder.put(grammarAccess.getDefineArrayAccess().getSimpleExprsAssignment_0_1_1_1(), "rule__DefineArray__SimpleExprsAssignment_0_1_1_1");
			builder.put(grammarAccess.getDefineArrayAccess().getInnerArraysAssignment_1_1_0(), "rule__DefineArray__InnerArraysAssignment_1_1_0");
			builder.put(grammarAccess.getDefineArrayAccess().getInnerArraysAssignment_1_1_1_1(), "rule__DefineArray__InnerArraysAssignment_1_1_1_1");
			builder.put(grammarAccess.getDefineRegExpAccess().getDefineRegsListAssignment_1(), "rule__DefineRegExp__DefineRegsListAssignment_1");
			builder.put(grammarAccess.getDefineRegExpDeclAccess().getNameAssignment_0(), "rule__DefineRegExpDecl__NameAssignment_0");
			builder.put(grammarAccess.getDefineRegExpDeclAccess().getExpAssignment_2(), "rule__DefineRegExpDecl__ExpAssignment_2");
			builder.put(grammarAccess.getPatternParamListAccess().getParamsAssignment_0(), "rule__PatternParamList__ParamsAssignment_0");
			builder.put(grammarAccess.getPatternParamListAccess().getParamsAssignment_1_1(), "rule__PatternParamList__ParamsAssignment_1_1");
			builder.put(grammarAccess.getPatternParamAccess().getNameAssignment(), "rule__PatternParam__NameAssignment");
			builder.put(grammarAccess.getTypedParamListAccess().getParamsAssignment_0(), "rule__TypedParamList__ParamsAssignment_0");
			builder.put(grammarAccess.getTypedParamListAccess().getParamsAssignment_1_1(), "rule__TypedParamList__ParamsAssignment_1_1");
			builder.put(grammarAccess.getTypedParamAccess().getTypeAssignment_0(), "rule__TypedParam__TypeAssignment_0");
			builder.put(grammarAccess.getTypedParamAccess().getNameAssignment_1(), "rule__TypedParam__NameAssignment_1");
			builder.put(grammarAccess.getCounterAccess().getNameAssignment_1(), "rule__Counter__NameAssignment_1");
			builder.put(grammarAccess.getCounterAccess().getRangeAssignment_2_1(), "rule__Counter__RangeAssignment_2_1");
			builder.put(grammarAccess.getCounterAccess().getInitialAssignment_4_0_0(), "rule__Counter__InitialAssignment_4_0_0");
			builder.put(grammarAccess.getCounterAccess().getResetPredAssignment_4_0_1_1(), "rule__Counter__ResetPredAssignment_4_0_1_1");
			builder.put(grammarAccess.getCounterAccess().getIncPredAssignment_4_0_2_1(), "rule__Counter__IncPredAssignment_4_0_2_1");
			builder.put(grammarAccess.getCounterAccess().getDecPredAssignment_4_0_3_1(), "rule__Counter__DecPredAssignment_4_0_3_1");
			builder.put(grammarAccess.getCounterAccess().getOverflowMethodAssignment_4_0_4_1(), "rule__Counter__OverflowMethodAssignment_4_0_4_1");
			builder.put(grammarAccess.getCounterAccess().getUnderflowMethodAssignment_4_0_5_1(), "rule__Counter__UnderflowMethodAssignment_4_0_5_1");
			builder.put(grammarAccess.getMonitorAccess().getTypeAssignment_1(), "rule__Monitor__TypeAssignment_1");
			builder.put(grammarAccess.getMonitorAccess().getNameAssignment_2(), "rule__Monitor__NameAssignment_2");
			builder.put(grammarAccess.getMonitorAccess().getInitialAssignment_4_0_0_1(), "rule__Monitor__InitialAssignment_4_0_0_1");
			builder.put(grammarAccess.getMonitorAccess().getSafetyAssignment_4_0_1_1(), "rule__Monitor__SafetyAssignment_4_0_1_1");
			builder.put(grammarAccess.getMonitorAccess().getStateInvAssignment_4_0_2_1(), "rule__Monitor__StateInvAssignment_4_0_2_1");
			builder.put(grammarAccess.getPatternAccess().getNameAssignment_1(), "rule__Pattern__NameAssignment_1");
			builder.put(grammarAccess.getPatternAccess().getParamsAssignment_2_1(), "rule__Pattern__ParamsAssignment_2_1");
			builder.put(grammarAccess.getPatternAccess().getVarDeclListAssignment_3_1_1(), "rule__Pattern__VarDeclListAssignment_3_1_1");
			builder.put(grammarAccess.getPatternAccess().getInitialAssignment_3_2_0_0_1(), "rule__Pattern__InitialAssignment_3_2_0_0_1");
			builder.put(grammarAccess.getPatternAccess().getSafetyAssignment_3_2_0_1_1(), "rule__Pattern__SafetyAssignment_3_2_0_1_1");
			builder.put(grammarAccess.getPatternAccess().getStateInvAssignment_3_2_0_2_1(), "rule__Pattern__StateInvAssignment_3_2_0_2_1");
			builder.put(grammarAccess.getPatternAccess().getJusticeAssignment_3_2_0_3_1(), "rule__Pattern__JusticeAssignment_3_2_0_3_1");
			builder.put(grammarAccess.getPredicateAccess().getNameAssignment_1(), "rule__Predicate__NameAssignment_1");
			builder.put(grammarAccess.getPredicateAccess().getParamsAssignment_2_0_1(), "rule__Predicate__ParamsAssignment_2_0_1");
			builder.put(grammarAccess.getPredicateAccess().getBodyAssignment_3_0_1(), "rule__Predicate__BodyAssignment_3_0_1");
			builder.put(grammarAccess.getPredicateAccess().getBodyAssignment_3_1_1(), "rule__Predicate__BodyAssignment_3_1_1");
			builder.put(grammarAccess.getVarTypeAccess().getNameAssignment_0_0(), "rule__VarType__NameAssignment_0_0");
			builder.put(grammarAccess.getVarTypeAccess().getSubrAssignment_0_1_2(), "rule__VarType__SubrAssignment_0_1_2");
			builder.put(grammarAccess.getVarTypeAccess().getConstAssignment_0_2_1(), "rule__VarType__ConstAssignment_0_2_1");
			builder.put(grammarAccess.getVarTypeAccess().getConstAssignment_0_2_2_1(), "rule__VarType__ConstAssignment_0_2_2_1");
			builder.put(grammarAccess.getVarTypeAccess().getTypeAssignment_0_3(), "rule__VarType__TypeAssignment_0_3");
			builder.put(grammarAccess.getVarTypeAccess().getDimensionsAssignment_1_1(), "rule__VarType__DimensionsAssignment_1_1");
			builder.put(grammarAccess.getLTLGarAccess().getNameAssignment_1_0(), "rule__LTLGar__NameAssignment_1_0");
			builder.put(grammarAccess.getLTLGarAccess().getParamsAssignment_1_1_1(), "rule__LTLGar__ParamsAssignment_1_1_1");
			builder.put(grammarAccess.getLTLGarAccess().getSafetyAssignment_2_0_0_2(), "rule__LTLGar__SafetyAssignment_2_0_0_2");
			builder.put(grammarAccess.getLTLGarAccess().getStateInvAssignment_2_0_0_3(), "rule__LTLGar__StateInvAssignment_2_0_0_3");
			builder.put(grammarAccess.getLTLGarAccess().getJusticeAssignment_2_0_0_4(), "rule__LTLGar__JusticeAssignment_2_0_0_4");
			builder.put(grammarAccess.getLTLGarAccess().getTemporalExprAssignment_2_0_1(), "rule__LTLGar__TemporalExprAssignment_2_0_1");
			builder.put(grammarAccess.getLTLGarAccess().getTrigAssignment_2_1(), "rule__LTLGar__TrigAssignment_2_1");
			builder.put(grammarAccess.getLTLAsmAccess().getNameAssignment_1_0(), "rule__LTLAsm__NameAssignment_1_0");
			builder.put(grammarAccess.getLTLAsmAccess().getParamsAssignment_1_1_1(), "rule__LTLAsm__ParamsAssignment_1_1_1");
			builder.put(grammarAccess.getLTLAsmAccess().getSafetyAssignment_2_0_0_2(), "rule__LTLAsm__SafetyAssignment_2_0_0_2");
			builder.put(grammarAccess.getLTLAsmAccess().getStateInvAssignment_2_0_0_3(), "rule__LTLAsm__StateInvAssignment_2_0_0_3");
			builder.put(grammarAccess.getLTLAsmAccess().getJusticeAssignment_2_0_0_4(), "rule__LTLAsm__JusticeAssignment_2_0_0_4");
			builder.put(grammarAccess.getLTLAsmAccess().getTemporalExprAssignment_2_0_1(), "rule__LTLAsm__TemporalExprAssignment_2_0_1");
			builder.put(grammarAccess.getLTLAsmAccess().getTrigAssignment_2_1(), "rule__LTLAsm__TrigAssignment_2_1");
			builder.put(grammarAccess.getEXGarAccess().getNameAssignment_1_0(), "rule__EXGar__NameAssignment_1_0");
			builder.put(grammarAccess.getEXGarAccess().getElementsAssignment_2_0_1(), "rule__EXGar__ElementsAssignment_2_0_1");
			builder.put(grammarAccess.getEXGarAccess().getElementsAssignment_2_0_2_1(), "rule__EXGar__ElementsAssignment_2_0_2_1");
			builder.put(grammarAccess.getEXGarAccess().getRegExpPointerAssignment_2_1_1(), "rule__EXGar__RegExpPointerAssignment_2_1_1");
			builder.put(grammarAccess.getEXGarAccess().getRegExpAssignment_2_2_1(), "rule__EXGar__RegExpAssignment_2_2_1");
			builder.put(grammarAccess.getTemporalInExprAccess().getNotAssignment_1_1(), "rule__TemporalInExpr__NotAssignment_1_1");
			builder.put(grammarAccess.getTemporalInExprAccess().getOperatorAssignment_1_2(), "rule__TemporalInExpr__OperatorAssignment_1_2");
			builder.put(grammarAccess.getTemporalInExprAccess().getValuesAssignment_1_4(), "rule__TemporalInExpr__ValuesAssignment_1_4");
			builder.put(grammarAccess.getTemporalInExprAccess().getValuesAssignment_1_5_1(), "rule__TemporalInExpr__ValuesAssignment_1_5_1");
			builder.put(grammarAccess.getTemporalImpExprAccess().getOperatorAssignment_1_1(), "rule__TemporalImpExpr__OperatorAssignment_1_1");
			builder.put(grammarAccess.getTemporalImpExprAccess().getImplicationAssignment_1_2(), "rule__TemporalImpExpr__ImplicationAssignment_1_2");
			builder.put(grammarAccess.getTemporalIffExprAccess().getOperatorAssignment_1_1(), "rule__TemporalIffExpr__OperatorAssignment_1_1");
			builder.put(grammarAccess.getTemporalIffExprAccess().getElementsAssignment_1_2(), "rule__TemporalIffExpr__ElementsAssignment_1_2");
			builder.put(grammarAccess.getTemporalOrExprAccess().getOperatorAssignment_1_1(), "rule__TemporalOrExpr__OperatorAssignment_1_1");
			builder.put(grammarAccess.getTemporalOrExprAccess().getElementsAssignment_1_2(), "rule__TemporalOrExpr__ElementsAssignment_1_2");
			builder.put(grammarAccess.getTemporalAndExprAccess().getOperatorAssignment_1_1(), "rule__TemporalAndExpr__OperatorAssignment_1_1");
			builder.put(grammarAccess.getTemporalAndExprAccess().getElementsAssignment_1_2(), "rule__TemporalAndExpr__ElementsAssignment_1_2");
			builder.put(grammarAccess.getTemporalRelationalExprAccess().getOperatorAssignment_1_1(), "rule__TemporalRelationalExpr__OperatorAssignment_1_1");
			builder.put(grammarAccess.getTemporalRelationalExprAccess().getRightAssignment_1_2(), "rule__TemporalRelationalExpr__RightAssignment_1_2");
			builder.put(grammarAccess.getTemporalRemainderExprAccess().getOperatorAssignment_1_1(), "rule__TemporalRemainderExpr__OperatorAssignment_1_1");
			builder.put(grammarAccess.getTemporalRemainderExprAccess().getRightAssignment_1_2(), "rule__TemporalRemainderExpr__RightAssignment_1_2");
			builder.put(grammarAccess.getTemporalAdditiveExprAccess().getOperatorAssignment_1_1(), "rule__TemporalAdditiveExpr__OperatorAssignment_1_1");
			builder.put(grammarAccess.getTemporalAdditiveExprAccess().getElementsAssignment_1_2(), "rule__TemporalAdditiveExpr__ElementsAssignment_1_2");
			builder.put(grammarAccess.getTemporalMultiplicativeExprAccess().getOperatorAssignment_1_1(), "rule__TemporalMultiplicativeExpr__OperatorAssignment_1_1");
			builder.put(grammarAccess.getTemporalMultiplicativeExprAccess().getElementsAssignment_1_2(), "rule__TemporalMultiplicativeExpr__ElementsAssignment_1_2");
			builder.put(grammarAccess.getTemporalBinaryExprAccess().getOperatorAssignment_1_1(), "rule__TemporalBinaryExpr__OperatorAssignment_1_1");
			builder.put(grammarAccess.getTemporalBinaryExprAccess().getElementsAssignment_1_2(), "rule__TemporalBinaryExpr__ElementsAssignment_1_2");
			builder.put(grammarAccess.getTemporalUnaryExprAccess().getKindsAssignment_1_1_0_0(), "rule__TemporalUnaryExpr__KindsAssignment_1_1_0_0");
			builder.put(grammarAccess.getTemporalUnaryExprAccess().getTueAssignment_1_1_0_1(), "rule__TemporalUnaryExpr__TueAssignment_1_1_0_1");
			builder.put(grammarAccess.getTemporalUnaryExprAccess().getKindsAssignment_1_1_1_0(), "rule__TemporalUnaryExpr__KindsAssignment_1_1_1_0");
			builder.put(grammarAccess.getTemporalUnaryExprAccess().getTueAssignment_1_1_1_1(), "rule__TemporalUnaryExpr__TueAssignment_1_1_1_1");
			builder.put(grammarAccess.getTemporalUnaryExprAccess().getKindsAssignment_1_1_2_0(), "rule__TemporalUnaryExpr__KindsAssignment_1_1_2_0");
			builder.put(grammarAccess.getTemporalUnaryExprAccess().getTueAssignment_1_1_2_1(), "rule__TemporalUnaryExpr__TueAssignment_1_1_2_1");
			builder.put(grammarAccess.getTemporalPrimaryExprAccess().getPredPattAssignment_2_1_0_0(), "rule__TemporalPrimaryExpr__PredPattAssignment_2_1_0_0");
			builder.put(grammarAccess.getTemporalPrimaryExprAccess().getPredPattParamsAssignment_2_1_0_1_0_1(), "rule__TemporalPrimaryExpr__PredPattParamsAssignment_2_1_0_1_0_1");
			builder.put(grammarAccess.getTemporalPrimaryExprAccess().getPredPattParamsAssignment_2_1_0_1_0_2_1(), "rule__TemporalPrimaryExpr__PredPattParamsAssignment_2_1_0_1_0_2_1");
			builder.put(grammarAccess.getTemporalPrimaryExprAccess().getOperatorAssignment_2_1_1_0(), "rule__TemporalPrimaryExpr__OperatorAssignment_2_1_1_0");
			builder.put(grammarAccess.getTemporalPrimaryExprAccess().getTpeAssignment_2_1_1_1(), "rule__TemporalPrimaryExpr__TpeAssignment_2_1_1_1");
			builder.put(grammarAccess.getTemporalPrimaryExprAccess().getPointerAssignment_2_1_2_0(), "rule__TemporalPrimaryExpr__PointerAssignment_2_1_2_0");
			builder.put(grammarAccess.getTemporalPrimaryExprAccess().getIndexAssignment_2_1_2_1_1(), "rule__TemporalPrimaryExpr__IndexAssignment_2_1_2_1_1");
			builder.put(grammarAccess.getTemporalPrimaryExprAccess().getOperatorAssignment_2_1_3_0(), "rule__TemporalPrimaryExpr__OperatorAssignment_2_1_3_0");
			builder.put(grammarAccess.getTemporalPrimaryExprAccess().getTemporalExpressionAssignment_2_1_3_2(), "rule__TemporalPrimaryExpr__TemporalExpressionAssignment_2_1_3_2");
			builder.put(grammarAccess.getTemporalPrimaryExprAccess().getOperatorAssignment_2_1_4_0(), "rule__TemporalPrimaryExpr__OperatorAssignment_2_1_4_0");
			builder.put(grammarAccess.getTemporalPrimaryExprAccess().getRegexpAssignment_2_1_4_2_0(), "rule__TemporalPrimaryExpr__RegexpAssignment_2_1_4_2_0");
			builder.put(grammarAccess.getTemporalPrimaryExprAccess().getRegexpPointerAssignment_2_1_4_2_1(), "rule__TemporalPrimaryExpr__RegexpPointerAssignment_2_1_4_2_1");
			builder.put(grammarAccess.getTemporalPrimaryExprAccess().getPointerAssignment_2_1_5_0(), "rule__TemporalPrimaryExpr__PointerAssignment_2_1_5_0");
			builder.put(grammarAccess.getTemporalPrimaryExprAccess().getOperatorAssignment_2_1_5_1(), "rule__TemporalPrimaryExpr__OperatorAssignment_2_1_5_1");
			builder.put(grammarAccess.getTemporalPrimaryExprAccess().getPointerAssignment_2_1_6_0(), "rule__TemporalPrimaryExpr__PointerAssignment_2_1_6_0");
			builder.put(grammarAccess.getTemporalPrimaryExprAccess().getOperatorAssignment_2_1_6_1(), "rule__TemporalPrimaryExpr__OperatorAssignment_2_1_6_1");
			builder.put(grammarAccess.getTemporalPrimaryExprAccess().getPointerAssignment_2_1_7_0(), "rule__TemporalPrimaryExpr__PointerAssignment_2_1_7_0");
			builder.put(grammarAccess.getTemporalPrimaryExprAccess().getOperatorAssignment_2_1_7_1(), "rule__TemporalPrimaryExpr__OperatorAssignment_2_1_7_1");
			builder.put(grammarAccess.getTemporalPrimaryExprAccess().getPointerAssignment_2_1_8_0(), "rule__TemporalPrimaryExpr__PointerAssignment_2_1_8_0");
			builder.put(grammarAccess.getTemporalPrimaryExprAccess().getOperatorAssignment_2_1_8_1(), "rule__TemporalPrimaryExpr__OperatorAssignment_2_1_8_1");
			builder.put(grammarAccess.getTemporalPrimaryExprAccess().getPointerAssignment_2_1_9_0(), "rule__TemporalPrimaryExpr__PointerAssignment_2_1_9_0");
			builder.put(grammarAccess.getTemporalPrimaryExprAccess().getOperatorAssignment_2_1_9_1(), "rule__TemporalPrimaryExpr__OperatorAssignment_2_1_9_1");
			builder.put(grammarAccess.getTemporalPrimaryExprAccess().getPointerAssignment_2_1_10_0(), "rule__TemporalPrimaryExpr__PointerAssignment_2_1_10_0");
			builder.put(grammarAccess.getTemporalPrimaryExprAccess().getOperatorAssignment_2_1_10_1(), "rule__TemporalPrimaryExpr__OperatorAssignment_2_1_10_1");
			builder.put(grammarAccess.getSubrangeAccess().getFromAssignment_0(), "rule__Subrange__FromAssignment_0");
			builder.put(grammarAccess.getSubrangeAccess().getToAssignment_2(), "rule__Subrange__ToAssignment_2");
			builder.put(grammarAccess.getConstantAccess().getBooleanValueAssignment_1_0(), "rule__Constant__BooleanValueAssignment_1_0");
			builder.put(grammarAccess.getConstantAccess().getBooleanValueAssignment_1_1(), "rule__Constant__BooleanValueAssignment_1_1");
			builder.put(grammarAccess.getConstantAccess().getBooleanValueAssignment_1_2(), "rule__Constant__BooleanValueAssignment_1_2");
			builder.put(grammarAccess.getConstantAccess().getBooleanValueAssignment_1_3(), "rule__Constant__BooleanValueAssignment_1_3");
			builder.put(grammarAccess.getConstantAccess().getIntegerValueAssignment_1_4(), "rule__Constant__IntegerValueAssignment_1_4");
			builder.put(grammarAccess.getTriggerAccess().getInitPointerAssignment_2_0(), "rule__Trigger__InitPointerAssignment_2_0");
			builder.put(grammarAccess.getTriggerAccess().getInitRegExpAssignment_2_1(), "rule__Trigger__InitRegExpAssignment_2_1");
			builder.put(grammarAccess.getTriggerAccess().getEffectPointerAssignment_4_0(), "rule__Trigger__EffectPointerAssignment_4_0");
			builder.put(grammarAccess.getTriggerAccess().getEffectRegExpAssignment_4_1(), "rule__Trigger__EffectRegExpAssignment_4_1");
			builder.put(grammarAccess.getBinaryRegExpAccess().getOpAssignment_1_1(), "rule__BinaryRegExp__OpAssignment_1_1");
			builder.put(grammarAccess.getBinaryRegExpAccess().getRightAssignment_1_2(), "rule__BinaryRegExp__RightAssignment_1_2");
			builder.put(grammarAccess.getUnaryRegExpAccess().getKleenedAssignment_1_1_0(), "rule__UnaryRegExp__KleenedAssignment_1_1_0");
			builder.put(grammarAccess.getUnaryRegExpAccess().getQuestionMarkAssignment_1_1_1(), "rule__UnaryRegExp__QuestionMarkAssignment_1_1_1");
			builder.put(grammarAccess.getUnaryRegExpAccess().getPlusAssignment_1_1_2(), "rule__UnaryRegExp__PlusAssignment_1_1_2");
			builder.put(grammarAccess.getUnaryRegExpAccess().getHaveExactRepetitionAssignment_1_1_3_0(), "rule__UnaryRegExp__HaveExactRepetitionAssignment_1_1_3_0");
			builder.put(grammarAccess.getUnaryRegExpAccess().getExactRepetitionAssignment_1_1_3_1(), "rule__UnaryRegExp__ExactRepetitionAssignment_1_1_3_1");
			builder.put(grammarAccess.getUnaryRegExpAccess().getHaveAtLeastAssignment_1_1_4_0(), "rule__UnaryRegExp__HaveAtLeastAssignment_1_1_4_0");
			builder.put(grammarAccess.getUnaryRegExpAccess().getAtLeastAssignment_1_1_4_1(), "rule__UnaryRegExp__AtLeastAssignment_1_1_4_1");
			builder.put(grammarAccess.getUnaryRegExpAccess().getHaveRangeAssignment_1_1_5_0(), "rule__UnaryRegExp__HaveRangeAssignment_1_1_5_0");
			builder.put(grammarAccess.getUnaryRegExpAccess().getFromAssignment_1_1_5_1_0(), "rule__UnaryRegExp__FromAssignment_1_1_5_1_0");
			builder.put(grammarAccess.getUnaryRegExpAccess().getFromDefineAssignment_1_1_5_1_1(), "rule__UnaryRegExp__FromDefineAssignment_1_1_5_1_1");
			builder.put(grammarAccess.getUnaryRegExpAccess().getToAssignment_1_1_5_3_0(), "rule__UnaryRegExp__ToAssignment_1_1_5_3_0");
			builder.put(grammarAccess.getUnaryRegExpAccess().getToDefineAssignment_1_1_5_3_1(), "rule__UnaryRegExp__ToDefineAssignment_1_1_5_3_1");
			builder.put(grammarAccess.getCompRegExpAccess().getCompAssignment_1_1(), "rule__CompRegExp__CompAssignment_1_1");
			builder.put(grammarAccess.getCompRegExpAccess().getLeftAssignment_1_2(), "rule__CompRegExp__LeftAssignment_1_2");
			builder.put(grammarAccess.getPrimaryRegExpAccess().getValAssignment_1(), "rule__PrimaryRegExp__ValAssignment_1");
			builder.put(grammarAccess.getPrimaryRegExpAccess().getAssrtAssignment_2(), "rule__PrimaryRegExp__AssrtAssignment_2");
			builder.put(grammarAccess.getPrimaryRegExpAccess().getEmptyAssignment_3(), "rule__PrimaryRegExp__EmptyAssignment_3");
			builder.put(grammarAccess.getBooleanTermAccess().getRelExprAssignment_2(), "rule__BooleanTerm__RelExprAssignment_2");
			builder.put(grammarAccess.getValueInRangeAccess().getConstAssignment_0(), "rule__ValueInRange__ConstAssignment_0");
			builder.put(grammarAccess.getValueInRangeAccess().getIntAssignment_1(), "rule__ValueInRange__IntAssignment_1");
			builder.put(grammarAccess.getValueInRangeAccess().getFromAssignment_2_0(), "rule__ValueInRange__FromAssignment_2_0");
			builder.put(grammarAccess.getValueInRangeAccess().getMultiAssignment_2_1(), "rule__ValueInRange__MultiAssignment_2_1");
			builder.put(grammarAccess.getValueInRangeAccess().getToAssignment_2_2(), "rule__ValueInRange__ToAssignment_2_2");
			builder.put(grammarAccess.getValueInRangeAccess().getBooleanValueAssignment_3(), "rule__ValueInRange__BooleanValueAssignment_3");
			builder.put(grammarAccess.getQuantifierExprAccess().getOperatorAssignment_1_1_0(), "rule__QuantifierExpr__OperatorAssignment_1_1_0");
			builder.put(grammarAccess.getQuantifierExprAccess().getDomainVarAssignment_1_1_1(), "rule__QuantifierExpr__DomainVarAssignment_1_1_1");
			builder.put(grammarAccess.getQuantifierExprAccess().getTemporalExprAssignment_1_1_3(), "rule__QuantifierExpr__TemporalExprAssignment_1_1_3");
			builder.put(grammarAccess.getDomainVarDeclAccess().getNameAssignment_0(), "rule__DomainVarDecl__NameAssignment_0");
			builder.put(grammarAccess.getDomainVarDeclAccess().getDomainTypeAssignment_2(), "rule__DomainVarDecl__DomainTypeAssignment_2");
			builder.put(grammarAccess.getSizeDefineDeclAccess().getValueAssignment_0(), "rule__SizeDefineDecl__ValueAssignment_0");
			builder.put(grammarAccess.getSizeDefineDeclAccess().getNameAssignment_1(), "rule__SizeDefineDecl__NameAssignment_1");
			builder.put(grammarAccess.getSizeDefineDeclAccess().getArithExpAssignment_2_1(), "rule__SizeDefineDecl__ArithExpAssignment_2_1");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private SpectraGrammarAccess grammarAccess;

	@Override
	protected InternalSpectraParser createParser() {
		InternalSpectraParser result = new InternalSpectraParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public SpectraGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(SpectraGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
