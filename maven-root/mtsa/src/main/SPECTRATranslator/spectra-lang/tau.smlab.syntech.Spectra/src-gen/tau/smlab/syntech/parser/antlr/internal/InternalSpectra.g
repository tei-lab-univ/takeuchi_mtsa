/*
 * generated by Xtext 2.25.0
 */
grammar InternalSpectra;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package tau.smlab.syntech.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package tau.smlab.syntech.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import tau.smlab.syntech.services.SpectraGrammarAccess;

}

@parser::members {

 	private SpectraGrammarAccess grammarAccess;

    public InternalSpectraParser(TokenStream input, SpectraGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected SpectraGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getImportsImportParserRuleCall_0_0());
				}
				lv_imports_0_0=ruleImport
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"imports",
						lv_imports_0_0,
						"tau.smlab.syntech.Spectra.Import");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			otherlv_1='module'
			{
				newLeafNode(otherlv_1, grammarAccess.getModelAccess().getModuleKeyword_1_0());
			}
			    |
			otherlv_2='spec'
			{
				newLeafNode(otherlv_2, grammarAccess.getModelAccess().getSpecKeyword_1_1());
			}
		)
		(
			(
				lv_name_3_0=RULE_ID
				{
					newLeafNode(lv_name_3_0, grammarAccess.getModelAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getModelRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getElementsDeclParserRuleCall_3_0());
				}
				lv_elements_4_0=ruleDecl
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"elements",
						lv_elements_4_0,
						"tau.smlab.syntech.Spectra.Decl");
					afterParserOrEnumRuleCall();
				}
			)
		)+
	)
;

// Entry rule entryRuleImport
entryRuleImport returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImportRule()); }
	iv_ruleImport=ruleImport
	{ $current=$iv_ruleImport.current; }
	EOF;

// Rule Import
ruleImport returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='import'
		{
			newLeafNode(otherlv_0, grammarAccess.getImportAccess().getImportKeyword_0());
		}
		(
			(
				lv_importURI_1_0=RULE_STRING
				{
					newLeafNode(lv_importURI_1_0, grammarAccess.getImportAccess().getImportURISTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getImportRule());
					}
					setWithLastConsumed(
						$current,
						"importURI",
						lv_importURI_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleDecl
entryRuleDecl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeclRule()); }
	iv_ruleDecl=ruleDecl
	{ $current=$iv_ruleDecl.current; }
	EOF;

// Rule Decl
ruleDecl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getDeclAccess().getVarParserRuleCall_0());
		}
		this_Var_0=ruleVar
		{
			$current = $this_Var_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDeclAccess().getTypeDefParserRuleCall_1());
		}
		this_TypeDef_1=ruleTypeDef
		{
			$current = $this_TypeDef_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDeclAccess().getDefineParserRuleCall_2());
		}
		this_Define_2=ruleDefine
		{
			$current = $this_Define_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDeclAccess().getPredicateParserRuleCall_3());
		}
		this_Predicate_3=rulePredicate
		{
			$current = $this_Predicate_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDeclAccess().getPatternParserRuleCall_4());
		}
		this_Pattern_4=rulePattern
		{
			$current = $this_Pattern_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDeclAccess().getMonitorParserRuleCall_5());
		}
		this_Monitor_5=ruleMonitor
		{
			$current = $this_Monitor_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDeclAccess().getWeightDefParserRuleCall_6());
		}
		this_WeightDef_6=ruleWeightDef
		{
			$current = $this_WeightDef_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDeclAccess().getLTLGarParserRuleCall_7());
		}
		this_LTLGar_7=ruleLTLGar
		{
			$current = $this_LTLGar_7.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDeclAccess().getLTLAsmParserRuleCall_8());
		}
		this_LTLAsm_8=ruleLTLAsm
		{
			$current = $this_LTLAsm_8.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDeclAccess().getEXGarParserRuleCall_9());
		}
		this_EXGar_9=ruleEXGar
		{
			$current = $this_EXGar_9.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDeclAccess().getCounterParserRuleCall_10());
		}
		this_Counter_10=ruleCounter
		{
			$current = $this_Counter_10.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDeclAccess().getDefineRegExpParserRuleCall_11());
		}
		this_DefineRegExp_11=ruleDefineRegExp
		{
			$current = $this_DefineRegExp_11.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleWeightDef
entryRuleWeightDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWeightDefRule()); }
	iv_ruleWeightDef=ruleWeightDef
	{ $current=$iv_ruleWeightDef.current; }
	EOF;

// Rule WeightDef
ruleWeightDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='weight'
		{
			newLeafNode(otherlv_0, grammarAccess.getWeightDefAccess().getWeightKeyword_0());
		}
		(
			(
				(
					lv_name_1_0=RULE_ID
					{
						newLeafNode(lv_name_1_0, grammarAccess.getWeightDefAccess().getNameIDTerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getWeightDefRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_1_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			otherlv_2=':'
			{
				newLeafNode(otherlv_2, grammarAccess.getWeightDefAccess().getColonKeyword_1_1());
			}
		)?
		(
			(
				lv_negative_3_0='-'
				{
					newLeafNode(lv_negative_3_0, grammarAccess.getWeightDefAccess().getNegativeHyphenMinusKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getWeightDefRule());
					}
					setWithLastConsumed($current, "negative", lv_negative_3_0, "-");
				}
			)
		)?
		(
			(
				lv_value_4_0=RULE_INT
				{
					newLeafNode(lv_value_4_0, grammarAccess.getWeightDefAccess().getValueINTTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getWeightDefRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_4_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getWeightDefAccess().getDefinitionTemporalInExprParserRuleCall_4_0());
				}
				lv_definition_5_0=ruleTemporalInExpr
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWeightDefRule());
					}
					set(
						$current,
						"definition",
						lv_definition_5_0,
						"tau.smlab.syntech.Spectra.TemporalInExpr");
					afterParserOrEnumRuleCall();
				}
			)
		)
		{
			newCompositeNode(grammarAccess.getWeightDefAccess().getTOK_SEMIParserRuleCall_5());
		}
		ruleTOK_SEMI
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleVar
entryRuleVar returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVarRule()); }
	iv_ruleVar=ruleVar
	{ $current=$iv_ruleVar.current; }
	EOF;

// Rule Var
ruleVar returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getVarAccess().getKindVarOwnerEnumRuleCall_0_0());
				}
				lv_kind_0_0=ruleVarOwner
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVarRule());
					}
					set(
						$current,
						"kind",
						lv_kind_0_0,
						"tau.smlab.syntech.Spectra.VarOwner");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getVarAccess().getVarVarDeclParserRuleCall_1_0());
				}
				lv_var_1_0=ruleVarDecl
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVarRule());
					}
					set(
						$current,
						"var",
						lv_var_1_0,
						"tau.smlab.syntech.Spectra.VarDecl");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleTypeDef
entryRuleTypeDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeDefRule()); }
	iv_ruleTypeDef=ruleTypeDef
	{ $current=$iv_ruleTypeDef.current; }
	EOF;

// Rule TypeDef
ruleTypeDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='type'
		{
			newLeafNode(otherlv_0, grammarAccess.getTypeDefAccess().getTypeKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getTypeDefAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTypeDefRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='='
		{
			newLeafNode(otherlv_2, grammarAccess.getTypeDefAccess().getEqualsSignKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTypeDefAccess().getTypeVarTypeParserRuleCall_3_0());
				}
				lv_type_3_0=ruleVarType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypeDefRule());
					}
					set(
						$current,
						"type",
						lv_type_3_0,
						"tau.smlab.syntech.Spectra.VarType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		{
			newCompositeNode(grammarAccess.getTypeDefAccess().getTOK_SEMIParserRuleCall_4());
		}
		ruleTOK_SEMI
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleVarDecl
entryRuleVarDecl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVarDeclRule()); }
	iv_ruleVarDecl=ruleVarDecl
	{ $current=$iv_ruleVarDecl.current; }
	EOF;

// Rule VarDecl
ruleVarDecl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getVarDeclAccess().getTypeVarTypeParserRuleCall_0_0());
				}
				lv_type_0_0=ruleVarType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVarDeclRule());
					}
					set(
						$current,
						"type",
						lv_type_0_0,
						"tau.smlab.syntech.Spectra.VarType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getVarDeclAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVarDeclRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		{
			newCompositeNode(grammarAccess.getVarDeclAccess().getTOK_SEMIParserRuleCall_2());
		}
		ruleTOK_SEMI
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleTypeConstant
entryRuleTypeConstant returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeConstantRule()); }
	iv_ruleTypeConstant=ruleTypeConstant
	{ $current=$iv_ruleTypeConstant.current; }
	EOF;

// Rule TypeConstant
ruleTypeConstant returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getTypeConstantAccess().getNameTypeConstantLiteralParserRuleCall_0());
			}
			lv_name_0_0=ruleTypeConstantLiteral
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getTypeConstantRule());
				}
				set(
					$current,
					"name",
					lv_name_0_0,
					"tau.smlab.syntech.Spectra.TypeConstantLiteral");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleTypeConstantLiteral
entryRuleTypeConstantLiteral returns [String current=null]:
	{ newCompositeNode(grammarAccess.getTypeConstantLiteralRule()); }
	iv_ruleTypeConstantLiteral=ruleTypeConstantLiteral
	{ $current=$iv_ruleTypeConstantLiteral.current.getText(); }
	EOF;

// Rule TypeConstantLiteral
ruleTypeConstantLiteral returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getTypeConstantLiteralAccess().getIDTerminalRuleCall_0());
		}
		    |
		this_INT_1=RULE_INT
		{
			$current.merge(this_INT_1);
		}
		{
			newLeafNode(this_INT_1, grammarAccess.getTypeConstantLiteralAccess().getINTTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleDefine
entryRuleDefine returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDefineRule()); }
	iv_ruleDefine=ruleDefine
	{ $current=$iv_ruleDefine.current; }
	EOF;

// Rule Define
ruleDefine returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='define'
		{
			newLeafNode(otherlv_0, grammarAccess.getDefineAccess().getDefineKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDefineAccess().getDefineListDefineDeclParserRuleCall_1_0());
				}
				lv_defineList_1_0=ruleDefineDecl
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDefineRule());
					}
					add(
						$current,
						"defineList",
						lv_defineList_1_0,
						"tau.smlab.syntech.Spectra.DefineDecl");
					afterParserOrEnumRuleCall();
				}
			)
		)+
	)
;

// Entry rule entryRuleDefineDecl
entryRuleDefineDecl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDefineDeclRule()); }
	iv_ruleDefineDecl=ruleDefineDecl
	{ $current=$iv_ruleDefineDecl.current; }
	EOF;

// Rule DefineDecl
ruleDefineDecl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					(
						lv_name_0_0=RULE_ID
						{
							newLeafNode(lv_name_0_0, grammarAccess.getDefineDeclAccess().getNameIDTerminalRuleCall_0_0_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getDefineDeclRule());
							}
							setWithLastConsumed(
								$current,
								"name",
								lv_name_0_0,
								"org.eclipse.xtext.common.Terminals.ID");
						}
					)
				)
				otherlv_1=':='
				{
					newLeafNode(otherlv_1, grammarAccess.getDefineDeclAccess().getColonEqualsSignKeyword_0_0_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getDefineDeclAccess().getSimpleExprTemporalExpressionParserRuleCall_0_0_2_0());
						}
						lv_simpleExpr_2_0=ruleTemporalExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDefineDeclRule());
							}
							set(
								$current,
								"simpleExpr",
								lv_simpleExpr_2_0,
								"tau.smlab.syntech.Spectra.TemporalExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					(
						lv_name_3_0=RULE_ID
						{
							newLeafNode(lv_name_3_0, grammarAccess.getDefineDeclAccess().getNameIDTerminalRuleCall_0_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getDefineDeclRule());
							}
							setWithLastConsumed(
								$current,
								"name",
								lv_name_3_0,
								"org.eclipse.xtext.common.Terminals.ID");
						}
					)
				)
				(
					otherlv_4='['
					{
						newLeafNode(otherlv_4, grammarAccess.getDefineDeclAccess().getLeftSquareBracketKeyword_0_1_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getDefineDeclAccess().getDimensionsSizeDefineDeclParserRuleCall_0_1_1_1_0());
							}
							lv_dimensions_5_0=ruleSizeDefineDecl
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getDefineDeclRule());
								}
								add(
									$current,
									"dimensions",
									lv_dimensions_5_0,
									"tau.smlab.syntech.Spectra.SizeDefineDecl");
								afterParserOrEnumRuleCall();
							}
						)
					)
					otherlv_6=']'
					{
						newLeafNode(otherlv_6, grammarAccess.getDefineDeclAccess().getRightSquareBracketKeyword_0_1_1_2());
					}
				)+
				otherlv_7=':='
				{
					newLeafNode(otherlv_7, grammarAccess.getDefineDeclAccess().getColonEqualsSignKeyword_0_1_2());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getDefineDeclAccess().getInnerArrayDefineArrayParserRuleCall_0_1_3_0());
						}
						lv_innerArray_8_0=ruleDefineArray
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDefineDeclRule());
							}
							set(
								$current,
								"innerArray",
								lv_innerArray_8_0,
								"tau.smlab.syntech.Spectra.DefineArray");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)
		{
			newCompositeNode(grammarAccess.getDefineDeclAccess().getTOK_SEMIParserRuleCall_1());
		}
		ruleTOK_SEMI
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleDefineArray
entryRuleDefineArray returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDefineArrayRule()); }
	iv_ruleDefineArray=ruleDefineArray
	{ $current=$iv_ruleDefineArray.current; }
	EOF;

// Rule DefineArray
ruleDefineArray returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='{'
			{
				newLeafNode(otherlv_0, grammarAccess.getDefineArrayAccess().getLeftCurlyBracketKeyword_0_0());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getDefineArrayAccess().getSimpleExprsTemporalExpressionParserRuleCall_0_1_0_0());
						}
						lv_simpleExprs_1_0=ruleTemporalExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDefineArrayRule());
							}
							add(
								$current,
								"simpleExprs",
								lv_simpleExprs_1_0,
								"tau.smlab.syntech.Spectra.TemporalExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_2=','
					{
						newLeafNode(otherlv_2, grammarAccess.getDefineArrayAccess().getCommaKeyword_0_1_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getDefineArrayAccess().getSimpleExprsTemporalExpressionParserRuleCall_0_1_1_1_0());
							}
							lv_simpleExprs_3_0=ruleTemporalExpression
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getDefineArrayRule());
								}
								add(
									$current,
									"simpleExprs",
									lv_simpleExprs_3_0,
									"tau.smlab.syntech.Spectra.TemporalExpression");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)
			otherlv_4='}'
			{
				newLeafNode(otherlv_4, grammarAccess.getDefineArrayAccess().getRightCurlyBracketKeyword_0_2());
			}
		)
		    |
		(
			otherlv_5='{'
			{
				newLeafNode(otherlv_5, grammarAccess.getDefineArrayAccess().getLeftCurlyBracketKeyword_1_0());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getDefineArrayAccess().getInnerArraysDefineArrayParserRuleCall_1_1_0_0());
						}
						lv_innerArrays_6_0=ruleDefineArray
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDefineArrayRule());
							}
							add(
								$current,
								"innerArrays",
								lv_innerArrays_6_0,
								"tau.smlab.syntech.Spectra.DefineArray");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_7=','
					{
						newLeafNode(otherlv_7, grammarAccess.getDefineArrayAccess().getCommaKeyword_1_1_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getDefineArrayAccess().getInnerArraysDefineArrayParserRuleCall_1_1_1_1_0());
							}
							lv_innerArrays_8_0=ruleDefineArray
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getDefineArrayRule());
								}
								add(
									$current,
									"innerArrays",
									lv_innerArrays_8_0,
									"tau.smlab.syntech.Spectra.DefineArray");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)
			otherlv_9='}'
			{
				newLeafNode(otherlv_9, grammarAccess.getDefineArrayAccess().getRightCurlyBracketKeyword_1_2());
			}
		)
	)
;

// Entry rule entryRuleDefineRegExp
entryRuleDefineRegExp returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDefineRegExpRule()); }
	iv_ruleDefineRegExp=ruleDefineRegExp
	{ $current=$iv_ruleDefineRegExp.current; }
	EOF;

// Rule DefineRegExp
ruleDefineRegExp returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='regexp'
		{
			newLeafNode(otherlv_0, grammarAccess.getDefineRegExpAccess().getRegexpKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDefineRegExpAccess().getDefineRegsListDefineRegExpDeclParserRuleCall_1_0());
				}
				lv_defineRegsList_1_0=ruleDefineRegExpDecl
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDefineRegExpRule());
					}
					add(
						$current,
						"defineRegsList",
						lv_defineRegsList_1_0,
						"tau.smlab.syntech.Spectra.DefineRegExpDecl");
					afterParserOrEnumRuleCall();
				}
			)
		)+
	)
;

// Entry rule entryRuleDefineRegExpDecl
entryRuleDefineRegExpDecl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDefineRegExpDeclRule()); }
	iv_ruleDefineRegExpDecl=ruleDefineRegExpDecl
	{ $current=$iv_ruleDefineRegExpDecl.current; }
	EOF;

// Rule DefineRegExpDecl
ruleDefineRegExpDecl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getDefineRegExpDeclAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDefineRegExpDeclRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1=':='
		{
			newLeafNode(otherlv_1, grammarAccess.getDefineRegExpDeclAccess().getColonEqualsSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDefineRegExpDeclAccess().getExpRegExpParserRuleCall_2_0());
				}
				lv_exp_2_0=ruleRegExp
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDefineRegExpDeclRule());
					}
					set(
						$current,
						"exp",
						lv_exp_2_0,
						"tau.smlab.syntech.Spectra.RegExp");
					afterParserOrEnumRuleCall();
				}
			)
		)
		{
			newCompositeNode(grammarAccess.getDefineRegExpDeclAccess().getTOK_SEMIParserRuleCall_3());
		}
		ruleTOK_SEMI
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulePatternParamList
entryRulePatternParamList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPatternParamListRule()); }
	iv_rulePatternParamList=rulePatternParamList
	{ $current=$iv_rulePatternParamList.current; }
	EOF;

// Rule PatternParamList
rulePatternParamList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getPatternParamListAccess().getParamsPatternParamParserRuleCall_0_0());
				}
				lv_params_0_0=rulePatternParam
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPatternParamListRule());
					}
					add(
						$current,
						"params",
						lv_params_0_0,
						"tau.smlab.syntech.Spectra.PatternParam");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getPatternParamListAccess().getCommaKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPatternParamListAccess().getParamsPatternParamParserRuleCall_1_1_0());
					}
					lv_params_2_0=rulePatternParam
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPatternParamListRule());
						}
						add(
							$current,
							"params",
							lv_params_2_0,
							"tau.smlab.syntech.Spectra.PatternParam");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRulePatternParam
entryRulePatternParam returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPatternParamRule()); }
	iv_rulePatternParam=rulePatternParam
	{ $current=$iv_rulePatternParam.current; }
	EOF;

// Rule PatternParam
rulePatternParam returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getPatternParamAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getPatternParamRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"org.eclipse.xtext.common.Terminals.ID");
			}
		)
	)
;

// Entry rule entryRuleTypedParamList
entryRuleTypedParamList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypedParamListRule()); }
	iv_ruleTypedParamList=ruleTypedParamList
	{ $current=$iv_ruleTypedParamList.current; }
	EOF;

// Rule TypedParamList
ruleTypedParamList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getTypedParamListAccess().getParamsTypedParamParserRuleCall_0_0());
				}
				lv_params_0_0=ruleTypedParam
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypedParamListRule());
					}
					add(
						$current,
						"params",
						lv_params_0_0,
						"tau.smlab.syntech.Spectra.TypedParam");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getTypedParamListAccess().getCommaKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTypedParamListAccess().getParamsTypedParamParserRuleCall_1_1_0());
					}
					lv_params_2_0=ruleTypedParam
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTypedParamListRule());
						}
						add(
							$current,
							"params",
							lv_params_2_0,
							"tau.smlab.syntech.Spectra.TypedParam");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleTypedParam
entryRuleTypedParam returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypedParamRule()); }
	iv_ruleTypedParam=ruleTypedParam
	{ $current=$iv_ruleTypedParam.current; }
	EOF;

// Rule TypedParam
ruleTypedParam returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getTypedParamAccess().getTypeVarTypeParserRuleCall_0_0());
				}
				lv_type_0_0=ruleVarType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypedParamRule());
					}
					set(
						$current,
						"type",
						lv_type_0_0,
						"tau.smlab.syntech.Spectra.VarType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getTypedParamAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTypedParamRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleCounter
entryRuleCounter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCounterRule()); }
	iv_ruleCounter=ruleCounter
	{ $current=$iv_ruleCounter.current; }
	EOF;

// Rule Counter
ruleCounter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='counter'
		{
			newLeafNode(otherlv_0, grammarAccess.getCounterAccess().getCounterKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getCounterAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCounterRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_2='('
			{
				newLeafNode(otherlv_2, grammarAccess.getCounterAccess().getLeftParenthesisKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCounterAccess().getRangeSubrangeParserRuleCall_2_1_0());
					}
					lv_range_3_0=ruleSubrange
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCounterRule());
						}
						set(
							$current,
							"range",
							lv_range_3_0,
							"tau.smlab.syntech.Spectra.Subrange");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_4=')'
			{
				newLeafNode(otherlv_4, grammarAccess.getCounterAccess().getRightParenthesisKeyword_2_2());
			}
		)
		otherlv_5='{'
		{
			newLeafNode(otherlv_5, grammarAccess.getCounterAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getCounterAccess().getInitialTemporalInExprParserRuleCall_4_0_0_0());
						}
						lv_initial_6_0=ruleTemporalInExpr
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCounterRule());
							}
							add(
								$current,
								"initial",
								lv_initial_6_0,
								"tau.smlab.syntech.Spectra.TemporalInExpr");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					otherlv_7='reset:'
					{
						newLeafNode(otherlv_7, grammarAccess.getCounterAccess().getResetKeyword_4_0_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getCounterAccess().getResetPredTemporalInExprParserRuleCall_4_0_1_1_0());
							}
							lv_resetPred_8_0=ruleTemporalInExpr
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getCounterRule());
								}
								add(
									$current,
									"resetPred",
									lv_resetPred_8_0,
									"tau.smlab.syntech.Spectra.TemporalInExpr");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
				    |
				(
					otherlv_9='inc:'
					{
						newLeafNode(otherlv_9, grammarAccess.getCounterAccess().getIncKeyword_4_0_2_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getCounterAccess().getIncPredTemporalExpressionParserRuleCall_4_0_2_1_0());
							}
							lv_incPred_10_0=ruleTemporalExpression
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getCounterRule());
								}
								add(
									$current,
									"incPred",
									lv_incPred_10_0,
									"tau.smlab.syntech.Spectra.TemporalExpression");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
				    |
				(
					otherlv_11='dec:'
					{
						newLeafNode(otherlv_11, grammarAccess.getCounterAccess().getDecKeyword_4_0_3_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getCounterAccess().getDecPredTemporalExpressionParserRuleCall_4_0_3_1_0());
							}
							lv_decPred_12_0=ruleTemporalExpression
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getCounterRule());
								}
								add(
									$current,
									"decPred",
									lv_decPred_12_0,
									"tau.smlab.syntech.Spectra.TemporalExpression");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
				    |
				(
					otherlv_13='overflow:'
					{
						newLeafNode(otherlv_13, grammarAccess.getCounterAccess().getOverflowKeyword_4_0_4_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getCounterAccess().getOverflowMethodOverflowMethodEnumRuleCall_4_0_4_1_0());
							}
							lv_overflowMethod_14_0=ruleOverflowMethod
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getCounterRule());
								}
								add(
									$current,
									"overflowMethod",
									lv_overflowMethod_14_0,
									"tau.smlab.syntech.Spectra.OverflowMethod");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
				    |
				(
					otherlv_15='underflow:'
					{
						newLeafNode(otherlv_15, grammarAccess.getCounterAccess().getUnderflowKeyword_4_0_5_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getCounterAccess().getUnderflowMethodOverflowMethodEnumRuleCall_4_0_5_1_0());
							}
							lv_underflowMethod_16_0=ruleOverflowMethod
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getCounterRule());
								}
								add(
									$current,
									"underflowMethod",
									lv_underflowMethod_16_0,
									"tau.smlab.syntech.Spectra.OverflowMethod");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
			)
			{
				newCompositeNode(grammarAccess.getCounterAccess().getTOK_SEMIParserRuleCall_4_1());
			}
			ruleTOK_SEMI
			{
				afterParserOrEnumRuleCall();
			}
		)*
		otherlv_18='}'
		{
			newLeafNode(otherlv_18, grammarAccess.getCounterAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleMonitor
entryRuleMonitor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMonitorRule()); }
	iv_ruleMonitor=ruleMonitor
	{ $current=$iv_ruleMonitor.current; }
	EOF;

// Rule Monitor
ruleMonitor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='monitor'
		{
			newLeafNode(otherlv_0, grammarAccess.getMonitorAccess().getMonitorKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMonitorAccess().getTypeVarTypeParserRuleCall_1_0());
				}
				lv_type_1_0=ruleVarType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMonitorRule());
					}
					set(
						$current,
						"type",
						lv_type_1_0,
						"tau.smlab.syntech.Spectra.VarType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getMonitorAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMonitorRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getMonitorAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				(
					(
						otherlv_4='ini'
						{
							newLeafNode(otherlv_4, grammarAccess.getMonitorAccess().getIniKeyword_4_0_0_0_0());
						}
						    |
						otherlv_5='initially'
						{
							newLeafNode(otherlv_5, grammarAccess.getMonitorAccess().getInitiallyKeyword_4_0_0_0_1());
						}
					)?
					(
						(
							{
								newCompositeNode(grammarAccess.getMonitorAccess().getInitialTemporalInExprParserRuleCall_4_0_0_1_0());
							}
							lv_initial_6_0=ruleTemporalInExpr
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getMonitorRule());
								}
								add(
									$current,
									"initial",
									lv_initial_6_0,
									"tau.smlab.syntech.Spectra.TemporalInExpr");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
				    |
				(
					(
						otherlv_7='G'
						{
							newLeafNode(otherlv_7, grammarAccess.getMonitorAccess().getGKeyword_4_0_1_0_0());
						}
						    |
						otherlv_8='trans'
						{
							newLeafNode(otherlv_8, grammarAccess.getMonitorAccess().getTransKeyword_4_0_1_0_1());
						}
					)
					(
						(
							{
								newCompositeNode(grammarAccess.getMonitorAccess().getSafetyTemporalInExprParserRuleCall_4_0_1_1_0());
							}
							lv_safety_9_0=ruleTemporalInExpr
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getMonitorRule());
								}
								add(
									$current,
									"safety",
									lv_safety_9_0,
									"tau.smlab.syntech.Spectra.TemporalInExpr");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
				    |
				(
					(
						otherlv_10='always'
						{
							newLeafNode(otherlv_10, grammarAccess.getMonitorAccess().getAlwaysKeyword_4_0_2_0_0());
						}
						    |
						otherlv_11='alw'
						{
							newLeafNode(otherlv_11, grammarAccess.getMonitorAccess().getAlwKeyword_4_0_2_0_1());
						}
					)
					(
						(
							{
								newCompositeNode(grammarAccess.getMonitorAccess().getStateInvTemporalInExprParserRuleCall_4_0_2_1_0());
							}
							lv_stateInv_12_0=ruleTemporalInExpr
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getMonitorRule());
								}
								add(
									$current,
									"stateInv",
									lv_stateInv_12_0,
									"tau.smlab.syntech.Spectra.TemporalInExpr");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
			)
			{
				newCompositeNode(grammarAccess.getMonitorAccess().getTOK_SEMIParserRuleCall_4_1());
			}
			ruleTOK_SEMI
			{
				afterParserOrEnumRuleCall();
			}
		)*
		otherlv_14='}'
		{
			newLeafNode(otherlv_14, grammarAccess.getMonitorAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRulePattern
entryRulePattern returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPatternRule()); }
	iv_rulePattern=rulePattern
	{ $current=$iv_rulePattern.current; }
	EOF;

// Rule Pattern
rulePattern returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='pattern'
		{
			newLeafNode(otherlv_0, grammarAccess.getPatternAccess().getPatternKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getPatternAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPatternRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_2='('
			{
				newLeafNode(otherlv_2, grammarAccess.getPatternAccess().getLeftParenthesisKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPatternAccess().getParamsPatternParamListParserRuleCall_2_1_0());
					}
					lv_params_3_0=rulePatternParamList
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPatternRule());
						}
						set(
							$current,
							"params",
							lv_params_3_0,
							"tau.smlab.syntech.Spectra.PatternParamList");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_4=')'
			{
				newLeafNode(otherlv_4, grammarAccess.getPatternAccess().getRightParenthesisKeyword_2_2());
			}
		)?
		(
			otherlv_5='{'
			{
				newLeafNode(otherlv_5, grammarAccess.getPatternAccess().getLeftCurlyBracketKeyword_3_0());
			}
			(
				otherlv_6='var'
				{
					newLeafNode(otherlv_6, grammarAccess.getPatternAccess().getVarKeyword_3_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getPatternAccess().getVarDeclListVarDeclParserRuleCall_3_1_1_0());
						}
						lv_varDeclList_7_0=ruleVarDecl
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPatternRule());
							}
							add(
								$current,
								"varDeclList",
								lv_varDeclList_7_0,
								"tau.smlab.syntech.Spectra.VarDecl");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			(
				(
					(
						(
							otherlv_8='ini'
							{
								newLeafNode(otherlv_8, grammarAccess.getPatternAccess().getIniKeyword_3_2_0_0_0_0());
							}
							    |
							otherlv_9='initially'
							{
								newLeafNode(otherlv_9, grammarAccess.getPatternAccess().getInitiallyKeyword_3_2_0_0_0_1());
							}
						)?
						(
							(
								{
									newCompositeNode(grammarAccess.getPatternAccess().getInitialTemporalInExprParserRuleCall_3_2_0_0_1_0());
								}
								lv_initial_10_0=ruleTemporalInExpr
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getPatternRule());
									}
									add(
										$current,
										"initial",
										lv_initial_10_0,
										"tau.smlab.syntech.Spectra.TemporalInExpr");
									afterParserOrEnumRuleCall();
								}
							)
						)
					)
					    |
					(
						(
							otherlv_11='G'
							{
								newLeafNode(otherlv_11, grammarAccess.getPatternAccess().getGKeyword_3_2_0_1_0_0());
							}
							    |
							otherlv_12='trans'
							{
								newLeafNode(otherlv_12, grammarAccess.getPatternAccess().getTransKeyword_3_2_0_1_0_1());
							}
						)
						(
							(
								{
									newCompositeNode(grammarAccess.getPatternAccess().getSafetyTemporalInExprParserRuleCall_3_2_0_1_1_0());
								}
								lv_safety_13_0=ruleTemporalInExpr
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getPatternRule());
									}
									add(
										$current,
										"safety",
										lv_safety_13_0,
										"tau.smlab.syntech.Spectra.TemporalInExpr");
									afterParserOrEnumRuleCall();
								}
							)
						)
					)
					    |
					(
						(
							otherlv_14='always'
							{
								newLeafNode(otherlv_14, grammarAccess.getPatternAccess().getAlwaysKeyword_3_2_0_2_0_0());
							}
							    |
							otherlv_15='alw'
							{
								newLeafNode(otherlv_15, grammarAccess.getPatternAccess().getAlwKeyword_3_2_0_2_0_1());
							}
						)
						(
							(
								{
									newCompositeNode(grammarAccess.getPatternAccess().getStateInvTemporalInExprParserRuleCall_3_2_0_2_1_0());
								}
								lv_stateInv_16_0=ruleTemporalInExpr
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getPatternRule());
									}
									add(
										$current,
										"stateInv",
										lv_stateInv_16_0,
										"tau.smlab.syntech.Spectra.TemporalInExpr");
									afterParserOrEnumRuleCall();
								}
							)
						)
					)
					    |
					(
						(
							otherlv_17='GF'
							{
								newLeafNode(otherlv_17, grammarAccess.getPatternAccess().getGFKeyword_3_2_0_3_0_0());
							}
							    |
							otherlv_18='alwEv'
							{
								newLeafNode(otherlv_18, grammarAccess.getPatternAccess().getAlwEvKeyword_3_2_0_3_0_1());
							}
							    |
							otherlv_19='alwaysEventually'
							{
								newLeafNode(otherlv_19, grammarAccess.getPatternAccess().getAlwaysEventuallyKeyword_3_2_0_3_0_2());
							}
						)
						(
							(
								{
									newCompositeNode(grammarAccess.getPatternAccess().getJusticeTemporalInExprParserRuleCall_3_2_0_3_1_0());
								}
								lv_justice_20_0=ruleTemporalInExpr
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getPatternRule());
									}
									add(
										$current,
										"justice",
										lv_justice_20_0,
										"tau.smlab.syntech.Spectra.TemporalInExpr");
									afterParserOrEnumRuleCall();
								}
							)
						)
					)
				)
				{
					newCompositeNode(grammarAccess.getPatternAccess().getTOK_SEMIParserRuleCall_3_2_1());
				}
				ruleTOK_SEMI
				{
					afterParserOrEnumRuleCall();
				}
			)+
			otherlv_22='}'
			{
				newLeafNode(otherlv_22, grammarAccess.getPatternAccess().getRightCurlyBracketKeyword_3_3());
			}
		)
	)
;

// Entry rule entryRulePredicate
entryRulePredicate returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPredicateRule()); }
	iv_rulePredicate=rulePredicate
	{ $current=$iv_rulePredicate.current; }
	EOF;

// Rule Predicate
rulePredicate returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='predicate'
		{
			newLeafNode(otherlv_0, grammarAccess.getPredicateAccess().getPredicateKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getPredicateAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPredicateRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				otherlv_2='('
				{
					newLeafNode(otherlv_2, grammarAccess.getPredicateAccess().getLeftParenthesisKeyword_2_0_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getPredicateAccess().getParamsTypedParamListParserRuleCall_2_0_1_0());
						}
						lv_params_3_0=ruleTypedParamList
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPredicateRule());
							}
							set(
								$current,
								"params",
								lv_params_3_0,
								"tau.smlab.syntech.Spectra.TypedParamList");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_4=')'
				{
					newLeafNode(otherlv_4, grammarAccess.getPredicateAccess().getRightParenthesisKeyword_2_0_2());
				}
			)
			    |
			otherlv_5='()'
			{
				newLeafNode(otherlv_5, grammarAccess.getPredicateAccess().getLeftParenthesisRightParenthesisKeyword_2_1());
			}
		)
		(
			(
				otherlv_6=':'
				{
					newLeafNode(otherlv_6, grammarAccess.getPredicateAccess().getColonKeyword_3_0_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getPredicateAccess().getBodyTemporalExpressionParserRuleCall_3_0_1_0());
						}
						lv_body_7_0=ruleTemporalExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPredicateRule());
							}
							set(
								$current,
								"body",
								lv_body_7_0,
								"tau.smlab.syntech.Spectra.TemporalExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				{
					newCompositeNode(grammarAccess.getPredicateAccess().getTOK_SEMIParserRuleCall_3_0_2());
				}
				ruleTOK_SEMI
				{
					afterParserOrEnumRuleCall();
				}
			)
			    |
			(
				otherlv_9='{'
				{
					newLeafNode(otherlv_9, grammarAccess.getPredicateAccess().getLeftCurlyBracketKeyword_3_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getPredicateAccess().getBodyTemporalExpressionParserRuleCall_3_1_1_0());
						}
						lv_body_10_0=ruleTemporalExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPredicateRule());
							}
							set(
								$current,
								"body",
								lv_body_10_0,
								"tau.smlab.syntech.Spectra.TemporalExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_11='}'
				{
					newLeafNode(otherlv_11, grammarAccess.getPredicateAccess().getRightCurlyBracketKeyword_3_1_2());
				}
			)
		)
	)
;

// Entry rule entryRuleVarType
entryRuleVarType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVarTypeRule()); }
	iv_ruleVarType=ruleVarType
	{ $current=$iv_ruleVarType.current; }
	EOF;

// Rule VarType
ruleVarType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_name_0_0='boolean'
					{
						newLeafNode(lv_name_0_0, grammarAccess.getVarTypeAccess().getNameBooleanKeyword_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getVarTypeRule());
						}
						setWithLastConsumed($current, "name", lv_name_0_0, "boolean");
					}
				)
			)
			    |
			(
				otherlv_1='Int'
				{
					newLeafNode(otherlv_1, grammarAccess.getVarTypeAccess().getIntKeyword_0_1_0());
				}
				otherlv_2='('
				{
					newLeafNode(otherlv_2, grammarAccess.getVarTypeAccess().getLeftParenthesisKeyword_0_1_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getVarTypeAccess().getSubrSubrangeParserRuleCall_0_1_2_0());
						}
						lv_subr_3_0=ruleSubrange
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getVarTypeRule());
							}
							set(
								$current,
								"subr",
								lv_subr_3_0,
								"tau.smlab.syntech.Spectra.Subrange");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_4=')'
				{
					newLeafNode(otherlv_4, grammarAccess.getVarTypeAccess().getRightParenthesisKeyword_0_1_3());
				}
			)
			    |
			(
				otherlv_5='{'
				{
					newLeafNode(otherlv_5, grammarAccess.getVarTypeAccess().getLeftCurlyBracketKeyword_0_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getVarTypeAccess().getConstTypeConstantParserRuleCall_0_2_1_0());
						}
						lv_const_6_0=ruleTypeConstant
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getVarTypeRule());
							}
							add(
								$current,
								"const",
								lv_const_6_0,
								"tau.smlab.syntech.Spectra.TypeConstant");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_7=','
					{
						newLeafNode(otherlv_7, grammarAccess.getVarTypeAccess().getCommaKeyword_0_2_2_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getVarTypeAccess().getConstTypeConstantParserRuleCall_0_2_2_1_0());
							}
							lv_const_8_0=ruleTypeConstant
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getVarTypeRule());
								}
								add(
									$current,
									"const",
									lv_const_8_0,
									"tau.smlab.syntech.Spectra.TypeConstant");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
				otherlv_9='}'
				{
					newLeafNode(otherlv_9, grammarAccess.getVarTypeAccess().getRightCurlyBracketKeyword_0_2_3());
				}
			)
			    |
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getVarTypeRule());
						}
					}
					otherlv_10=RULE_ID
					{
						newLeafNode(otherlv_10, grammarAccess.getVarTypeAccess().getTypeTypeDefCrossReference_0_3_0());
					}
				)
			)
		)
		(
			otherlv_11='['
			{
				newLeafNode(otherlv_11, grammarAccess.getVarTypeAccess().getLeftSquareBracketKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getVarTypeAccess().getDimensionsSizeDefineDeclParserRuleCall_1_1_0());
					}
					lv_dimensions_12_0=ruleSizeDefineDecl
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVarTypeRule());
						}
						add(
							$current,
							"dimensions",
							lv_dimensions_12_0,
							"tau.smlab.syntech.Spectra.SizeDefineDecl");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_13=']'
			{
				newLeafNode(otherlv_13, grammarAccess.getVarTypeAccess().getRightSquareBracketKeyword_1_2());
			}
		)*
	)
;

// Entry rule entryRuleLTLGar
entryRuleLTLGar returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLTLGarRule()); }
	iv_ruleLTLGar=ruleLTLGar
	{ $current=$iv_ruleLTLGar.current; }
	EOF;

// Rule LTLGar
ruleLTLGar returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='guarantee'
			{
				newLeafNode(otherlv_0, grammarAccess.getLTLGarAccess().getGuaranteeKeyword_0_0());
			}
			    |
			otherlv_1='gar'
			{
				newLeafNode(otherlv_1, grammarAccess.getLTLGarAccess().getGarKeyword_0_1());
			}
		)
		(
			(
				(
					lv_name_2_0=RULE_ID
					{
						newLeafNode(lv_name_2_0, grammarAccess.getLTLGarAccess().getNameIDTerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getLTLGarRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_2_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			(
				otherlv_3='{'
				{
					newLeafNode(otherlv_3, grammarAccess.getLTLGarAccess().getLeftCurlyBracketKeyword_1_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getLTLGarAccess().getParamsTypedParamListParserRuleCall_1_1_1_0());
						}
						lv_params_4_0=ruleTypedParamList
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getLTLGarRule());
							}
							set(
								$current,
								"params",
								lv_params_4_0,
								"tau.smlab.syntech.Spectra.TypedParamList");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_5='}'
				{
					newLeafNode(otherlv_5, grammarAccess.getLTLGarAccess().getRightCurlyBracketKeyword_1_1_2());
				}
			)?
			otherlv_6=':'
			{
				newLeafNode(otherlv_6, grammarAccess.getLTLGarAccess().getColonKeyword_1_2());
			}
		)?
		(
			(
				(
					otherlv_7='ini'
					{
						newLeafNode(otherlv_7, grammarAccess.getLTLGarAccess().getIniKeyword_2_0_0_0());
					}
					    |
					otherlv_8='initially'
					{
						newLeafNode(otherlv_8, grammarAccess.getLTLGarAccess().getInitiallyKeyword_2_0_0_1());
					}
					    |
					(
						(
							(
								lv_safety_9_1='G'
								{
									newLeafNode(lv_safety_9_1, grammarAccess.getLTLGarAccess().getSafetyGKeyword_2_0_0_2_0_0());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getLTLGarRule());
									}
									setWithLastConsumed($current, "safety", lv_safety_9_1, null);
								}
								    |
								lv_safety_9_2='trans'
								{
									newLeafNode(lv_safety_9_2, grammarAccess.getLTLGarAccess().getSafetyTransKeyword_2_0_0_2_0_1());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getLTLGarRule());
									}
									setWithLastConsumed($current, "safety", lv_safety_9_2, null);
								}
							)
						)
					)
					    |
					(
						(
							(
								lv_stateInv_10_1='always'
								{
									newLeafNode(lv_stateInv_10_1, grammarAccess.getLTLGarAccess().getStateInvAlwaysKeyword_2_0_0_3_0_0());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getLTLGarRule());
									}
									setWithLastConsumed($current, "stateInv", lv_stateInv_10_1, null);
								}
								    |
								lv_stateInv_10_2='alw'
								{
									newLeafNode(lv_stateInv_10_2, grammarAccess.getLTLGarAccess().getStateInvAlwKeyword_2_0_0_3_0_1());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getLTLGarRule());
									}
									setWithLastConsumed($current, "stateInv", lv_stateInv_10_2, null);
								}
							)
						)
					)
					    |
					(
						(
							(
								lv_justice_11_1='GF'
								{
									newLeafNode(lv_justice_11_1, grammarAccess.getLTLGarAccess().getJusticeGFKeyword_2_0_0_4_0_0());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getLTLGarRule());
									}
									setWithLastConsumed($current, "justice", lv_justice_11_1, null);
								}
								    |
								lv_justice_11_2='alwEv'
								{
									newLeafNode(lv_justice_11_2, grammarAccess.getLTLGarAccess().getJusticeAlwEvKeyword_2_0_0_4_0_1());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getLTLGarRule());
									}
									setWithLastConsumed($current, "justice", lv_justice_11_2, null);
								}
								    |
								lv_justice_11_3='alwaysEventually'
								{
									newLeafNode(lv_justice_11_3, grammarAccess.getLTLGarAccess().getJusticeAlwaysEventuallyKeyword_2_0_0_4_0_2());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getLTLGarRule());
									}
									setWithLastConsumed($current, "justice", lv_justice_11_3, null);
								}
							)
						)
					)
				)?
				(
					(
						{
							newCompositeNode(grammarAccess.getLTLGarAccess().getTemporalExprQuantifierExprParserRuleCall_2_0_1_0());
						}
						lv_temporalExpr_12_0=ruleQuantifierExpr
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getLTLGarRule());
							}
							set(
								$current,
								"temporalExpr",
								lv_temporalExpr_12_0,
								"tau.smlab.syntech.Spectra.QuantifierExpr");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getLTLGarAccess().getTrigTriggerParserRuleCall_2_1_0());
					}
					lv_trig_13_0=ruleTrigger
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLTLGarRule());
						}
						set(
							$current,
							"trig",
							lv_trig_13_0,
							"tau.smlab.syntech.Spectra.Trigger");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		{
			newCompositeNode(grammarAccess.getLTLGarAccess().getTOK_SEMIParserRuleCall_3());
		}
		ruleTOK_SEMI
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleLTLAsm
entryRuleLTLAsm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLTLAsmRule()); }
	iv_ruleLTLAsm=ruleLTLAsm
	{ $current=$iv_ruleLTLAsm.current; }
	EOF;

// Rule LTLAsm
ruleLTLAsm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='assumption'
			{
				newLeafNode(otherlv_0, grammarAccess.getLTLAsmAccess().getAssumptionKeyword_0_0());
			}
			    |
			otherlv_1='asm'
			{
				newLeafNode(otherlv_1, grammarAccess.getLTLAsmAccess().getAsmKeyword_0_1());
			}
		)
		(
			(
				(
					lv_name_2_0=RULE_ID
					{
						newLeafNode(lv_name_2_0, grammarAccess.getLTLAsmAccess().getNameIDTerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getLTLAsmRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_2_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			(
				otherlv_3='{'
				{
					newLeafNode(otherlv_3, grammarAccess.getLTLAsmAccess().getLeftCurlyBracketKeyword_1_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getLTLAsmAccess().getParamsTypedParamListParserRuleCall_1_1_1_0());
						}
						lv_params_4_0=ruleTypedParamList
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getLTLAsmRule());
							}
							set(
								$current,
								"params",
								lv_params_4_0,
								"tau.smlab.syntech.Spectra.TypedParamList");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_5='}'
				{
					newLeafNode(otherlv_5, grammarAccess.getLTLAsmAccess().getRightCurlyBracketKeyword_1_1_2());
				}
			)?
			otherlv_6=':'
			{
				newLeafNode(otherlv_6, grammarAccess.getLTLAsmAccess().getColonKeyword_1_2());
			}
		)?
		(
			(
				(
					otherlv_7='ini'
					{
						newLeafNode(otherlv_7, grammarAccess.getLTLAsmAccess().getIniKeyword_2_0_0_0());
					}
					    |
					otherlv_8='initially'
					{
						newLeafNode(otherlv_8, grammarAccess.getLTLAsmAccess().getInitiallyKeyword_2_0_0_1());
					}
					    |
					(
						(
							(
								lv_safety_9_1='G'
								{
									newLeafNode(lv_safety_9_1, grammarAccess.getLTLAsmAccess().getSafetyGKeyword_2_0_0_2_0_0());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getLTLAsmRule());
									}
									setWithLastConsumed($current, "safety", lv_safety_9_1, null);
								}
								    |
								lv_safety_9_2='trans'
								{
									newLeafNode(lv_safety_9_2, grammarAccess.getLTLAsmAccess().getSafetyTransKeyword_2_0_0_2_0_1());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getLTLAsmRule());
									}
									setWithLastConsumed($current, "safety", lv_safety_9_2, null);
								}
							)
						)
					)
					    |
					(
						(
							(
								lv_stateInv_10_1='always'
								{
									newLeafNode(lv_stateInv_10_1, grammarAccess.getLTLAsmAccess().getStateInvAlwaysKeyword_2_0_0_3_0_0());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getLTLAsmRule());
									}
									setWithLastConsumed($current, "stateInv", lv_stateInv_10_1, null);
								}
								    |
								lv_stateInv_10_2='alw'
								{
									newLeafNode(lv_stateInv_10_2, grammarAccess.getLTLAsmAccess().getStateInvAlwKeyword_2_0_0_3_0_1());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getLTLAsmRule());
									}
									setWithLastConsumed($current, "stateInv", lv_stateInv_10_2, null);
								}
							)
						)
					)
					    |
					(
						(
							(
								lv_justice_11_1='GF'
								{
									newLeafNode(lv_justice_11_1, grammarAccess.getLTLAsmAccess().getJusticeGFKeyword_2_0_0_4_0_0());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getLTLAsmRule());
									}
									setWithLastConsumed($current, "justice", lv_justice_11_1, null);
								}
								    |
								lv_justice_11_2='alwEv'
								{
									newLeafNode(lv_justice_11_2, grammarAccess.getLTLAsmAccess().getJusticeAlwEvKeyword_2_0_0_4_0_1());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getLTLAsmRule());
									}
									setWithLastConsumed($current, "justice", lv_justice_11_2, null);
								}
								    |
								lv_justice_11_3='alwaysEventually'
								{
									newLeafNode(lv_justice_11_3, grammarAccess.getLTLAsmAccess().getJusticeAlwaysEventuallyKeyword_2_0_0_4_0_2());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getLTLAsmRule());
									}
									setWithLastConsumed($current, "justice", lv_justice_11_3, null);
								}
							)
						)
					)
				)?
				(
					(
						{
							newCompositeNode(grammarAccess.getLTLAsmAccess().getTemporalExprQuantifierExprParserRuleCall_2_0_1_0());
						}
						lv_temporalExpr_12_0=ruleQuantifierExpr
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getLTLAsmRule());
							}
							set(
								$current,
								"temporalExpr",
								lv_temporalExpr_12_0,
								"tau.smlab.syntech.Spectra.QuantifierExpr");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getLTLAsmAccess().getTrigTriggerParserRuleCall_2_1_0());
					}
					lv_trig_13_0=ruleTrigger
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLTLAsmRule());
						}
						set(
							$current,
							"trig",
							lv_trig_13_0,
							"tau.smlab.syntech.Spectra.Trigger");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		{
			newCompositeNode(grammarAccess.getLTLAsmAccess().getTOK_SEMIParserRuleCall_3());
		}
		ruleTOK_SEMI
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleEXGar
entryRuleEXGar returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEXGarRule()); }
	iv_ruleEXGar=ruleEXGar
	{ $current=$iv_ruleEXGar.current; }
	EOF;

// Rule EXGar
ruleEXGar returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='guarantee'
			{
				newLeafNode(otherlv_0, grammarAccess.getEXGarAccess().getGuaranteeKeyword_0_0());
			}
			    |
			otherlv_1='gar'
			{
				newLeafNode(otherlv_1, grammarAccess.getEXGarAccess().getGarKeyword_0_1());
			}
		)
		(
			(
				(
					lv_name_2_0=RULE_ID
					{
						newLeafNode(lv_name_2_0, grammarAccess.getEXGarAccess().getNameIDTerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEXGarRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_2_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			otherlv_3=':'
			{
				newLeafNode(otherlv_3, grammarAccess.getEXGarAccess().getColonKeyword_1_1());
			}
		)?
		(
			(
				otherlv_4='GE'
				{
					newLeafNode(otherlv_4, grammarAccess.getEXGarAccess().getGEKeyword_2_0_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getEXGarAccess().getElementsTemporalInExprParserRuleCall_2_0_1_0());
						}
						lv_elements_5_0=ruleTemporalInExpr
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getEXGarRule());
							}
							add(
								$current,
								"elements",
								lv_elements_5_0,
								"tau.smlab.syntech.Spectra.TemporalInExpr");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_6=','
					{
						newLeafNode(otherlv_6, grammarAccess.getEXGarAccess().getCommaKeyword_2_0_2_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getEXGarAccess().getElementsTemporalInExprParserRuleCall_2_0_2_1_0());
							}
							lv_elements_7_0=ruleTemporalInExpr
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getEXGarRule());
								}
								add(
									$current,
									"elements",
									lv_elements_7_0,
									"tau.smlab.syntech.Spectra.TemporalInExpr");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)
			    |
			(
				otherlv_8='GEF'
				{
					newLeafNode(otherlv_8, grammarAccess.getEXGarAccess().getGEFKeyword_2_1_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getEXGarRule());
							}
						}
						otherlv_9=RULE_ID
						{
							newLeafNode(otherlv_9, grammarAccess.getEXGarAccess().getRegExpPointerDefineRegExpDeclCrossReference_2_1_1_0());
						}
					)
				)
			)
			    |
			(
				otherlv_10='GEF'
				{
					newLeafNode(otherlv_10, grammarAccess.getEXGarAccess().getGEFKeyword_2_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getEXGarAccess().getRegExpRegExpParserRuleCall_2_2_1_0());
						}
						lv_regExp_11_0=ruleRegExp
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getEXGarRule());
							}
							set(
								$current,
								"regExp",
								lv_regExp_11_0,
								"tau.smlab.syntech.Spectra.RegExp");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)
		{
			newCompositeNode(grammarAccess.getEXGarAccess().getTOK_SEMIParserRuleCall_3());
		}
		ruleTOK_SEMI
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleTemporalExpression
entryRuleTemporalExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTemporalExpressionRule()); }
	iv_ruleTemporalExpression=ruleTemporalExpression
	{ $current=$iv_ruleTemporalExpression.current; }
	EOF;

// Rule TemporalExpression
ruleTemporalExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getTemporalExpressionAccess().getQuantifierExprParserRuleCall());
	}
	this_QuantifierExpr_0=ruleQuantifierExpr
	{
		$current = $this_QuantifierExpr_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleTemporalInExpr
entryRuleTemporalInExpr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTemporalInExprRule()); }
	iv_ruleTemporalInExpr=ruleTemporalInExpr
	{ $current=$iv_ruleTemporalInExpr.current; }
	EOF;

// Rule TemporalInExpr
ruleTemporalInExpr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTemporalInExprAccess().getTemporalImpExprParserRuleCall_0());
		}
		this_TemporalImpExpr_0=ruleTemporalImpExpr
		{
			$current = $this_TemporalImpExpr_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getTemporalInExprAccess().getTemporalInExprLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					lv_not_2_0='not'
					{
						newLeafNode(lv_not_2_0, grammarAccess.getTemporalInExprAccess().getNotNotKeyword_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTemporalInExprRule());
						}
						setWithLastConsumed($current, "not", lv_not_2_0 != null, "not");
					}
				)
			)?
			(
				(
					lv_operator_3_0='in'
					{
						newLeafNode(lv_operator_3_0, grammarAccess.getTemporalInExprAccess().getOperatorInKeyword_1_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTemporalInExprRule());
						}
						setWithLastConsumed($current, "operator", lv_operator_3_0, "in");
					}
				)
			)
			otherlv_4='{'
			{
				newLeafNode(otherlv_4, grammarAccess.getTemporalInExprAccess().getLeftCurlyBracketKeyword_1_3());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTemporalInExprAccess().getValuesValueInRangeParserRuleCall_1_4_0());
					}
					lv_values_5_0=ruleValueInRange
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTemporalInExprRule());
						}
						add(
							$current,
							"values",
							lv_values_5_0,
							"tau.smlab.syntech.Spectra.ValueInRange");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_6=','
				{
					newLeafNode(otherlv_6, grammarAccess.getTemporalInExprAccess().getCommaKeyword_1_5_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getTemporalInExprAccess().getValuesValueInRangeParserRuleCall_1_5_1_0());
						}
						lv_values_7_0=ruleValueInRange
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTemporalInExprRule());
							}
							add(
								$current,
								"values",
								lv_values_7_0,
								"tau.smlab.syntech.Spectra.ValueInRange");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_8='}'
			{
				newLeafNode(otherlv_8, grammarAccess.getTemporalInExprAccess().getRightCurlyBracketKeyword_1_6());
			}
		)?
	)
;

// Entry rule entryRuleTemporalImpExpr
entryRuleTemporalImpExpr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTemporalImpExprRule()); }
	iv_ruleTemporalImpExpr=ruleTemporalImpExpr
	{ $current=$iv_ruleTemporalImpExpr.current; }
	EOF;

// Rule TemporalImpExpr
ruleTemporalImpExpr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTemporalImpExprAccess().getTemporalIffExprParserRuleCall_0());
		}
		this_TemporalIffExpr_0=ruleTemporalIffExpr
		{
			$current = $this_TemporalIffExpr_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getTemporalImpExprAccess().getTemporalImpExprLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					(
						lv_operator_2_1='->'
						{
							newLeafNode(lv_operator_2_1, grammarAccess.getTemporalImpExprAccess().getOperatorHyphenMinusGreaterThanSignKeyword_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getTemporalImpExprRule());
							}
							setWithLastConsumed($current, "operator", lv_operator_2_1, null);
						}
						    |
						lv_operator_2_2='implies'
						{
							newLeafNode(lv_operator_2_2, grammarAccess.getTemporalImpExprAccess().getOperatorImpliesKeyword_1_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getTemporalImpExprRule());
							}
							setWithLastConsumed($current, "operator", lv_operator_2_2, null);
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getTemporalImpExprAccess().getImplicationTemporalImpExprParserRuleCall_1_2_0());
					}
					lv_implication_3_0=ruleTemporalImpExpr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTemporalImpExprRule());
						}
						set(
							$current,
							"implication",
							lv_implication_3_0,
							"tau.smlab.syntech.Spectra.TemporalImpExpr");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleTemporalIffExpr
entryRuleTemporalIffExpr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTemporalIffExprRule()); }
	iv_ruleTemporalIffExpr=ruleTemporalIffExpr
	{ $current=$iv_ruleTemporalIffExpr.current; }
	EOF;

// Rule TemporalIffExpr
ruleTemporalIffExpr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTemporalIffExprAccess().getTemporalOrExprParserRuleCall_0());
		}
		this_TemporalOrExpr_0=ruleTemporalOrExpr
		{
			$current = $this_TemporalOrExpr_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndAdd(
						grammarAccess.getTemporalIffExprAccess().getTemporalIffExprElementsAction_1_0(),
						$current);
				}
			)
			(
				(
					(
						lv_operator_2_1='<->'
						{
							newLeafNode(lv_operator_2_1, grammarAccess.getTemporalIffExprAccess().getOperatorLessThanSignHyphenMinusGreaterThanSignKeyword_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getTemporalIffExprRule());
							}
							setWithLastConsumed($current, "operator", lv_operator_2_1, null);
						}
						    |
						lv_operator_2_2='iff'
						{
							newLeafNode(lv_operator_2_2, grammarAccess.getTemporalIffExprAccess().getOperatorIffKeyword_1_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getTemporalIffExprRule());
							}
							setWithLastConsumed($current, "operator", lv_operator_2_2, null);
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getTemporalIffExprAccess().getElementsTemporalOrExprParserRuleCall_1_2_0());
					}
					lv_elements_3_0=ruleTemporalOrExpr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTemporalIffExprRule());
						}
						add(
							$current,
							"elements",
							lv_elements_3_0,
							"tau.smlab.syntech.Spectra.TemporalOrExpr");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleTemporalOrExpr
entryRuleTemporalOrExpr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTemporalOrExprRule()); }
	iv_ruleTemporalOrExpr=ruleTemporalOrExpr
	{ $current=$iv_ruleTemporalOrExpr.current; }
	EOF;

// Rule TemporalOrExpr
ruleTemporalOrExpr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTemporalOrExprAccess().getTemporalAndExprParserRuleCall_0());
		}
		this_TemporalAndExpr_0=ruleTemporalAndExpr
		{
			$current = $this_TemporalAndExpr_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndAdd(
						grammarAccess.getTemporalOrExprAccess().getTemporalOrExprElementsAction_1_0(),
						$current);
				}
			)
			(
				(
					(
						lv_operator_2_1='|'
						{
							newLeafNode(lv_operator_2_1, grammarAccess.getTemporalOrExprAccess().getOperatorVerticalLineKeyword_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getTemporalOrExprRule());
							}
							addWithLastConsumed($current, "operator", lv_operator_2_1, null);
						}
						    |
						lv_operator_2_2='or'
						{
							newLeafNode(lv_operator_2_2, grammarAccess.getTemporalOrExprAccess().getOperatorOrKeyword_1_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getTemporalOrExprRule());
							}
							addWithLastConsumed($current, "operator", lv_operator_2_2, null);
						}
						    |
						lv_operator_2_3='xor'
						{
							newLeafNode(lv_operator_2_3, grammarAccess.getTemporalOrExprAccess().getOperatorXorKeyword_1_1_0_2());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getTemporalOrExprRule());
							}
							addWithLastConsumed($current, "operator", lv_operator_2_3, null);
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getTemporalOrExprAccess().getElementsTemporalAndExprParserRuleCall_1_2_0());
					}
					lv_elements_3_0=ruleTemporalAndExpr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTemporalOrExprRule());
						}
						add(
							$current,
							"elements",
							lv_elements_3_0,
							"tau.smlab.syntech.Spectra.TemporalAndExpr");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleTemporalAndExpr
entryRuleTemporalAndExpr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTemporalAndExprRule()); }
	iv_ruleTemporalAndExpr=ruleTemporalAndExpr
	{ $current=$iv_ruleTemporalAndExpr.current; }
	EOF;

// Rule TemporalAndExpr
ruleTemporalAndExpr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTemporalAndExprAccess().getTemporalRelationalExprParserRuleCall_0());
		}
		this_TemporalRelationalExpr_0=ruleTemporalRelationalExpr
		{
			$current = $this_TemporalRelationalExpr_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndAdd(
						grammarAccess.getTemporalAndExprAccess().getTemporalAndExprElementsAction_1_0(),
						$current);
				}
			)
			(
				(
					(
						lv_operator_2_1='&'
						{
							newLeafNode(lv_operator_2_1, grammarAccess.getTemporalAndExprAccess().getOperatorAmpersandKeyword_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getTemporalAndExprRule());
							}
							addWithLastConsumed($current, "operator", lv_operator_2_1, null);
						}
						    |
						lv_operator_2_2='and'
						{
							newLeafNode(lv_operator_2_2, grammarAccess.getTemporalAndExprAccess().getOperatorAndKeyword_1_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getTemporalAndExprRule());
							}
							addWithLastConsumed($current, "operator", lv_operator_2_2, null);
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getTemporalAndExprAccess().getElementsTemporalRelationalExprParserRuleCall_1_2_0());
					}
					lv_elements_3_0=ruleTemporalRelationalExpr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTemporalAndExprRule());
						}
						add(
							$current,
							"elements",
							lv_elements_3_0,
							"tau.smlab.syntech.Spectra.TemporalRelationalExpr");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleTemporalRelationalExpr
entryRuleTemporalRelationalExpr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTemporalRelationalExprRule()); }
	iv_ruleTemporalRelationalExpr=ruleTemporalRelationalExpr
	{ $current=$iv_ruleTemporalRelationalExpr.current; }
	EOF;

// Rule TemporalRelationalExpr
ruleTemporalRelationalExpr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTemporalRelationalExprAccess().getTemporalRemainderExprParserRuleCall_0());
		}
		this_TemporalRemainderExpr_0=ruleTemporalRemainderExpr
		{
			$current = $this_TemporalRemainderExpr_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getTemporalRelationalExprAccess().getTemporalRelationalExprLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					(
						lv_operator_2_1='='
						{
							newLeafNode(lv_operator_2_1, grammarAccess.getTemporalRelationalExprAccess().getOperatorEqualsSignKeyword_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getTemporalRelationalExprRule());
							}
							setWithLastConsumed($current, "operator", lv_operator_2_1, null);
						}
						    |
						lv_operator_2_2='!='
						{
							newLeafNode(lv_operator_2_2, grammarAccess.getTemporalRelationalExprAccess().getOperatorExclamationMarkEqualsSignKeyword_1_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getTemporalRelationalExprRule());
							}
							setWithLastConsumed($current, "operator", lv_operator_2_2, null);
						}
						    |
						lv_operator_2_3='<'
						{
							newLeafNode(lv_operator_2_3, grammarAccess.getTemporalRelationalExprAccess().getOperatorLessThanSignKeyword_1_1_0_2());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getTemporalRelationalExprRule());
							}
							setWithLastConsumed($current, "operator", lv_operator_2_3, null);
						}
						    |
						lv_operator_2_4='>'
						{
							newLeafNode(lv_operator_2_4, grammarAccess.getTemporalRelationalExprAccess().getOperatorGreaterThanSignKeyword_1_1_0_3());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getTemporalRelationalExprRule());
							}
							setWithLastConsumed($current, "operator", lv_operator_2_4, null);
						}
						    |
						lv_operator_2_5='<='
						{
							newLeafNode(lv_operator_2_5, grammarAccess.getTemporalRelationalExprAccess().getOperatorLessThanSignEqualsSignKeyword_1_1_0_4());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getTemporalRelationalExprRule());
							}
							setWithLastConsumed($current, "operator", lv_operator_2_5, null);
						}
						    |
						lv_operator_2_6='>='
						{
							newLeafNode(lv_operator_2_6, grammarAccess.getTemporalRelationalExprAccess().getOperatorGreaterThanSignEqualsSignKeyword_1_1_0_5());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getTemporalRelationalExprRule());
							}
							setWithLastConsumed($current, "operator", lv_operator_2_6, null);
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getTemporalRelationalExprAccess().getRightTemporalRemainderExprParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleTemporalRemainderExpr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTemporalRelationalExprRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"tau.smlab.syntech.Spectra.TemporalRemainderExpr");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleTemporalRemainderExpr
entryRuleTemporalRemainderExpr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTemporalRemainderExprRule()); }
	iv_ruleTemporalRemainderExpr=ruleTemporalRemainderExpr
	{ $current=$iv_ruleTemporalRemainderExpr.current; }
	EOF;

// Rule TemporalRemainderExpr
ruleTemporalRemainderExpr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTemporalRemainderExprAccess().getTemporalAdditiveExprParserRuleCall_0());
		}
		this_TemporalAdditiveExpr_0=ruleTemporalAdditiveExpr
		{
			$current = $this_TemporalAdditiveExpr_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getTemporalRemainderExprAccess().getTemporalRemainderExprLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					(
						lv_operator_2_1='mod'
						{
							newLeafNode(lv_operator_2_1, grammarAccess.getTemporalRemainderExprAccess().getOperatorModKeyword_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getTemporalRemainderExprRule());
							}
							setWithLastConsumed($current, "operator", lv_operator_2_1, null);
						}
						    |
						lv_operator_2_2='%'
						{
							newLeafNode(lv_operator_2_2, grammarAccess.getTemporalRemainderExprAccess().getOperatorPercentSignKeyword_1_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getTemporalRemainderExprRule());
							}
							setWithLastConsumed($current, "operator", lv_operator_2_2, null);
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getTemporalRemainderExprAccess().getRightTemporalAdditiveExprParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleTemporalAdditiveExpr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTemporalRemainderExprRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"tau.smlab.syntech.Spectra.TemporalAdditiveExpr");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleTemporalAdditiveExpr
entryRuleTemporalAdditiveExpr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTemporalAdditiveExprRule()); }
	iv_ruleTemporalAdditiveExpr=ruleTemporalAdditiveExpr
	{ $current=$iv_ruleTemporalAdditiveExpr.current; }
	EOF;

// Rule TemporalAdditiveExpr
ruleTemporalAdditiveExpr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTemporalAdditiveExprAccess().getTemporalMultiplicativeExprParserRuleCall_0());
		}
		this_TemporalMultiplicativeExpr_0=ruleTemporalMultiplicativeExpr
		{
			$current = $this_TemporalMultiplicativeExpr_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndAdd(
						grammarAccess.getTemporalAdditiveExprAccess().getTemporalAdditiveExprElementsAction_1_0(),
						$current);
				}
			)
			(
				(
					(
						lv_operator_2_1='+'
						{
							newLeafNode(lv_operator_2_1, grammarAccess.getTemporalAdditiveExprAccess().getOperatorPlusSignKeyword_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getTemporalAdditiveExprRule());
							}
							addWithLastConsumed($current, "operator", lv_operator_2_1, null);
						}
						    |
						lv_operator_2_2='-'
						{
							newLeafNode(lv_operator_2_2, grammarAccess.getTemporalAdditiveExprAccess().getOperatorHyphenMinusKeyword_1_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getTemporalAdditiveExprRule());
							}
							addWithLastConsumed($current, "operator", lv_operator_2_2, null);
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getTemporalAdditiveExprAccess().getElementsTemporalMultiplicativeExprParserRuleCall_1_2_0());
					}
					lv_elements_3_0=ruleTemporalMultiplicativeExpr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTemporalAdditiveExprRule());
						}
						add(
							$current,
							"elements",
							lv_elements_3_0,
							"tau.smlab.syntech.Spectra.TemporalMultiplicativeExpr");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleTemporalMultiplicativeExpr
entryRuleTemporalMultiplicativeExpr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTemporalMultiplicativeExprRule()); }
	iv_ruleTemporalMultiplicativeExpr=ruleTemporalMultiplicativeExpr
	{ $current=$iv_ruleTemporalMultiplicativeExpr.current; }
	EOF;

// Rule TemporalMultiplicativeExpr
ruleTemporalMultiplicativeExpr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTemporalMultiplicativeExprAccess().getTemporalBinaryExprParserRuleCall_0());
		}
		this_TemporalBinaryExpr_0=ruleTemporalBinaryExpr
		{
			$current = $this_TemporalBinaryExpr_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndAdd(
						grammarAccess.getTemporalMultiplicativeExprAccess().getTemporalMultiplicativeExprElementsAction_1_0(),
						$current);
				}
			)
			(
				(
					(
						lv_operator_2_1='*'
						{
							newLeafNode(lv_operator_2_1, grammarAccess.getTemporalMultiplicativeExprAccess().getOperatorAsteriskKeyword_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getTemporalMultiplicativeExprRule());
							}
							addWithLastConsumed($current, "operator", lv_operator_2_1, null);
						}
						    |
						lv_operator_2_2='/'
						{
							newLeafNode(lv_operator_2_2, grammarAccess.getTemporalMultiplicativeExprAccess().getOperatorSolidusKeyword_1_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getTemporalMultiplicativeExprRule());
							}
							addWithLastConsumed($current, "operator", lv_operator_2_2, null);
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getTemporalMultiplicativeExprAccess().getElementsTemporalBinaryExprParserRuleCall_1_2_0());
					}
					lv_elements_3_0=ruleTemporalBinaryExpr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTemporalMultiplicativeExprRule());
						}
						add(
							$current,
							"elements",
							lv_elements_3_0,
							"tau.smlab.syntech.Spectra.TemporalBinaryExpr");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleTemporalBinaryExpr
entryRuleTemporalBinaryExpr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTemporalBinaryExprRule()); }
	iv_ruleTemporalBinaryExpr=ruleTemporalBinaryExpr
	{ $current=$iv_ruleTemporalBinaryExpr.current; }
	EOF;

// Rule TemporalBinaryExpr
ruleTemporalBinaryExpr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTemporalBinaryExprAccess().getTemporalUnaryExprParserRuleCall_0());
		}
		this_TemporalUnaryExpr_0=ruleTemporalUnaryExpr
		{
			$current = $this_TemporalUnaryExpr_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndAdd(
						grammarAccess.getTemporalBinaryExprAccess().getTemporalBinaryExprElementsAction_1_0(),
						$current);
				}
			)
			(
				(
					(
						lv_operator_2_1='S'
						{
							newLeafNode(lv_operator_2_1, grammarAccess.getTemporalBinaryExprAccess().getOperatorSKeyword_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getTemporalBinaryExprRule());
							}
							addWithLastConsumed($current, "operator", lv_operator_2_1, null);
						}
						    |
						lv_operator_2_2='SINCE'
						{
							newLeafNode(lv_operator_2_2, grammarAccess.getTemporalBinaryExprAccess().getOperatorSINCEKeyword_1_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getTemporalBinaryExprRule());
							}
							addWithLastConsumed($current, "operator", lv_operator_2_2, null);
						}
						    |
						lv_operator_2_3='T'
						{
							newLeafNode(lv_operator_2_3, grammarAccess.getTemporalBinaryExprAccess().getOperatorTKeyword_1_1_0_2());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getTemporalBinaryExprRule());
							}
							addWithLastConsumed($current, "operator", lv_operator_2_3, null);
						}
						    |
						lv_operator_2_4='TRIGGERED'
						{
							newLeafNode(lv_operator_2_4, grammarAccess.getTemporalBinaryExprAccess().getOperatorTRIGGEREDKeyword_1_1_0_3());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getTemporalBinaryExprRule());
							}
							addWithLastConsumed($current, "operator", lv_operator_2_4, null);
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getTemporalBinaryExprAccess().getElementsTemporalUnaryExprParserRuleCall_1_2_0());
					}
					lv_elements_3_0=ruleTemporalUnaryExpr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTemporalBinaryExprRule());
						}
						add(
							$current,
							"elements",
							lv_elements_3_0,
							"tau.smlab.syntech.Spectra.TemporalUnaryExpr");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleTemporalUnaryExpr
entryRuleTemporalUnaryExpr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTemporalUnaryExprRule()); }
	iv_ruleTemporalUnaryExpr=ruleTemporalUnaryExpr
	{ $current=$iv_ruleTemporalUnaryExpr.current; }
	EOF;

// Rule TemporalUnaryExpr
ruleTemporalUnaryExpr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTemporalUnaryExprAccess().getTemporalPrimaryExprParserRuleCall_0());
		}
		this_TemporalPrimaryExpr_0=ruleTemporalPrimaryExpr
		{
			$current = $this_TemporalPrimaryExpr_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getTemporalUnaryExprAccess().getTemporalUnaryExprAction_1_0(),
						$current);
				}
			)
			(
				(
					(
						(
							(
								lv_kinds_2_1='Y'
								{
									newLeafNode(lv_kinds_2_1, grammarAccess.getTemporalUnaryExprAccess().getKindsYKeyword_1_1_0_0_0_0());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getTemporalUnaryExprRule());
									}
									setWithLastConsumed($current, "kinds", lv_kinds_2_1, null);
								}
								    |
								lv_kinds_2_2='PREV'
								{
									newLeafNode(lv_kinds_2_2, grammarAccess.getTemporalUnaryExprAccess().getKindsPREVKeyword_1_1_0_0_0_1());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getTemporalUnaryExprRule());
									}
									setWithLastConsumed($current, "kinds", lv_kinds_2_2, null);
								}
							)
						)
					)
					(
						(
							{
								newCompositeNode(grammarAccess.getTemporalUnaryExprAccess().getTueTemporalUnaryExprParserRuleCall_1_1_0_1_0());
							}
							lv_tue_3_0=ruleTemporalUnaryExpr
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getTemporalUnaryExprRule());
								}
								set(
									$current,
									"tue",
									lv_tue_3_0,
									"tau.smlab.syntech.Spectra.TemporalUnaryExpr");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
				    |
				(
					(
						(
							(
								lv_kinds_4_1='H'
								{
									newLeafNode(lv_kinds_4_1, grammarAccess.getTemporalUnaryExprAccess().getKindsHKeyword_1_1_1_0_0_0());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getTemporalUnaryExprRule());
									}
									setWithLastConsumed($current, "kinds", lv_kinds_4_1, null);
								}
								    |
								lv_kinds_4_2='HISTORICALLY'
								{
									newLeafNode(lv_kinds_4_2, grammarAccess.getTemporalUnaryExprAccess().getKindsHISTORICALLYKeyword_1_1_1_0_0_1());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getTemporalUnaryExprRule());
									}
									setWithLastConsumed($current, "kinds", lv_kinds_4_2, null);
								}
							)
						)
					)
					(
						(
							{
								newCompositeNode(grammarAccess.getTemporalUnaryExprAccess().getTueTemporalUnaryExprParserRuleCall_1_1_1_1_0());
							}
							lv_tue_5_0=ruleTemporalUnaryExpr
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getTemporalUnaryExprRule());
								}
								set(
									$current,
									"tue",
									lv_tue_5_0,
									"tau.smlab.syntech.Spectra.TemporalUnaryExpr");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
				    |
				(
					(
						(
							(
								lv_kinds_6_1='O'
								{
									newLeafNode(lv_kinds_6_1, grammarAccess.getTemporalUnaryExprAccess().getKindsOKeyword_1_1_2_0_0_0());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getTemporalUnaryExprRule());
									}
									setWithLastConsumed($current, "kinds", lv_kinds_6_1, null);
								}
								    |
								lv_kinds_6_2='ONCE'
								{
									newLeafNode(lv_kinds_6_2, grammarAccess.getTemporalUnaryExprAccess().getKindsONCEKeyword_1_1_2_0_0_1());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getTemporalUnaryExprRule());
									}
									setWithLastConsumed($current, "kinds", lv_kinds_6_2, null);
								}
							)
						)
					)
					(
						(
							{
								newCompositeNode(grammarAccess.getTemporalUnaryExprAccess().getTueTemporalUnaryExprParserRuleCall_1_1_2_1_0());
							}
							lv_tue_7_0=ruleTemporalUnaryExpr
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getTemporalUnaryExprRule());
								}
								set(
									$current,
									"tue",
									lv_tue_7_0,
									"tau.smlab.syntech.Spectra.TemporalUnaryExpr");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
			)
		)
	)
;

// Entry rule entryRuleTemporalPrimaryExpr
entryRuleTemporalPrimaryExpr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTemporalPrimaryExprRule()); }
	iv_ruleTemporalPrimaryExpr=ruleTemporalPrimaryExpr
	{ $current=$iv_ruleTemporalPrimaryExpr.current; }
	EOF;

// Rule TemporalPrimaryExpr
ruleTemporalPrimaryExpr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTemporalPrimaryExprAccess().getConstantParserRuleCall_0());
		}
		this_Constant_0=ruleConstant
		{
			$current = $this_Constant_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			otherlv_1='('
			{
				newLeafNode(otherlv_1, grammarAccess.getTemporalPrimaryExprAccess().getLeftParenthesisKeyword_1_0());
			}
			{
				newCompositeNode(grammarAccess.getTemporalPrimaryExprAccess().getQuantifierExprParserRuleCall_1_1());
			}
			this_QuantifierExpr_2=ruleQuantifierExpr
			{
				$current = $this_QuantifierExpr_2.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_3=')'
			{
				newLeafNode(otherlv_3, grammarAccess.getTemporalPrimaryExprAccess().getRightParenthesisKeyword_1_2());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getTemporalPrimaryExprAccess().getTemporalPrimaryExprAction_2_0(),
						$current);
				}
			)
			(
				(
					(
						(
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getTemporalPrimaryExprRule());
								}
							}
							otherlv_5=RULE_ID
							{
								newLeafNode(otherlv_5, grammarAccess.getTemporalPrimaryExprAccess().getPredPattPredicateOrPatternReferrableCrossReference_2_1_0_0_0());
							}
						)
					)
					(
						(
							otherlv_6='('
							{
								newLeafNode(otherlv_6, grammarAccess.getTemporalPrimaryExprAccess().getLeftParenthesisKeyword_2_1_0_1_0_0());
							}
							(
								(
									{
										newCompositeNode(grammarAccess.getTemporalPrimaryExprAccess().getPredPattParamsTemporalInExprParserRuleCall_2_1_0_1_0_1_0());
									}
									lv_predPattParams_7_0=ruleTemporalInExpr
									{
										if ($current==null) {
											$current = createModelElementForParent(grammarAccess.getTemporalPrimaryExprRule());
										}
										add(
											$current,
											"predPattParams",
											lv_predPattParams_7_0,
											"tau.smlab.syntech.Spectra.TemporalInExpr");
										afterParserOrEnumRuleCall();
									}
								)
							)
							(
								otherlv_8=','
								{
									newLeafNode(otherlv_8, grammarAccess.getTemporalPrimaryExprAccess().getCommaKeyword_2_1_0_1_0_2_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getTemporalPrimaryExprAccess().getPredPattParamsTemporalInExprParserRuleCall_2_1_0_1_0_2_1_0());
										}
										lv_predPattParams_9_0=ruleTemporalInExpr
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getTemporalPrimaryExprRule());
											}
											add(
												$current,
												"predPattParams",
												lv_predPattParams_9_0,
												"tau.smlab.syntech.Spectra.TemporalInExpr");
											afterParserOrEnumRuleCall();
										}
									)
								)
							)*
							otherlv_10=')'
							{
								newLeafNode(otherlv_10, grammarAccess.getTemporalPrimaryExprAccess().getRightParenthesisKeyword_2_1_0_1_0_3());
							}
						)
						    |
						otherlv_11='()'
						{
							newLeafNode(otherlv_11, grammarAccess.getTemporalPrimaryExprAccess().getLeftParenthesisRightParenthesisKeyword_2_1_0_1_1());
						}
					)
				)
				    |
				(
					(
						(
							(
								lv_operator_12_1='-'
								{
									newLeafNode(lv_operator_12_1, grammarAccess.getTemporalPrimaryExprAccess().getOperatorHyphenMinusKeyword_2_1_1_0_0_0());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getTemporalPrimaryExprRule());
									}
									setWithLastConsumed($current, "operator", lv_operator_12_1, null);
								}
								    |
								lv_operator_12_2='!'
								{
									newLeafNode(lv_operator_12_2, grammarAccess.getTemporalPrimaryExprAccess().getOperatorExclamationMarkKeyword_2_1_1_0_0_1());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getTemporalPrimaryExprRule());
									}
									setWithLastConsumed($current, "operator", lv_operator_12_2, null);
								}
							)
						)
					)
					(
						(
							{
								newCompositeNode(grammarAccess.getTemporalPrimaryExprAccess().getTpeTemporalPrimaryExprParserRuleCall_2_1_1_1_0());
							}
							lv_tpe_13_0=ruleTemporalPrimaryExpr
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getTemporalPrimaryExprRule());
								}
								set(
									$current,
									"tpe",
									lv_tpe_13_0,
									"tau.smlab.syntech.Spectra.TemporalPrimaryExpr");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
				    |
				(
					(
						(
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getTemporalPrimaryExprRule());
								}
							}
							otherlv_14=RULE_ID
							{
								newLeafNode(otherlv_14, grammarAccess.getTemporalPrimaryExprAccess().getPointerReferrableCrossReference_2_1_2_0_0());
							}
						)
					)
					(
						otherlv_15='['
						{
							newLeafNode(otherlv_15, grammarAccess.getTemporalPrimaryExprAccess().getLeftSquareBracketKeyword_2_1_2_1_0());
						}
						(
							(
								{
									newCompositeNode(grammarAccess.getTemporalPrimaryExprAccess().getIndexTemporalInExprParserRuleCall_2_1_2_1_1_0());
								}
								lv_index_16_0=ruleTemporalInExpr
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getTemporalPrimaryExprRule());
									}
									add(
										$current,
										"index",
										lv_index_16_0,
										"tau.smlab.syntech.Spectra.TemporalInExpr");
									afterParserOrEnumRuleCall();
								}
							)
						)
						otherlv_17=']'
						{
							newLeafNode(otherlv_17, grammarAccess.getTemporalPrimaryExprAccess().getRightSquareBracketKeyword_2_1_2_1_2());
						}
					)*
				)
				    |
				(
					(
						(
							lv_operator_18_0='next'
							{
								newLeafNode(lv_operator_18_0, grammarAccess.getTemporalPrimaryExprAccess().getOperatorNextKeyword_2_1_3_0_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getTemporalPrimaryExprRule());
								}
								setWithLastConsumed($current, "operator", lv_operator_18_0, "next");
							}
						)
					)
					otherlv_19='('
					{
						newLeafNode(otherlv_19, grammarAccess.getTemporalPrimaryExprAccess().getLeftParenthesisKeyword_2_1_3_1());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getTemporalPrimaryExprAccess().getTemporalExpressionTemporalInExprParserRuleCall_2_1_3_2_0());
							}
							lv_temporalExpression_20_0=ruleTemporalInExpr
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getTemporalPrimaryExprRule());
								}
								set(
									$current,
									"temporalExpression",
									lv_temporalExpression_20_0,
									"tau.smlab.syntech.Spectra.TemporalInExpr");
								afterParserOrEnumRuleCall();
							}
						)
					)
					otherlv_21=')'
					{
						newLeafNode(otherlv_21, grammarAccess.getTemporalPrimaryExprAccess().getRightParenthesisKeyword_2_1_3_3());
					}
				)
				    |
				(
					(
						(
							lv_operator_22_0='regexp'
							{
								newLeafNode(lv_operator_22_0, grammarAccess.getTemporalPrimaryExprAccess().getOperatorRegexpKeyword_2_1_4_0_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getTemporalPrimaryExprRule());
								}
								setWithLastConsumed($current, "operator", lv_operator_22_0, "regexp");
							}
						)
					)
					otherlv_23='('
					{
						newLeafNode(otherlv_23, grammarAccess.getTemporalPrimaryExprAccess().getLeftParenthesisKeyword_2_1_4_1());
					}
					(
						(
							(
								{
									newCompositeNode(grammarAccess.getTemporalPrimaryExprAccess().getRegexpRegExpParserRuleCall_2_1_4_2_0_0());
								}
								lv_regexp_24_0=ruleRegExp
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getTemporalPrimaryExprRule());
									}
									set(
										$current,
										"regexp",
										lv_regexp_24_0,
										"tau.smlab.syntech.Spectra.RegExp");
									afterParserOrEnumRuleCall();
								}
							)
						)
						    |
						(
							(
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getTemporalPrimaryExprRule());
									}
								}
								otherlv_25=RULE_ID
								{
									newLeafNode(otherlv_25, grammarAccess.getTemporalPrimaryExprAccess().getRegexpPointerDefineRegExpDeclCrossReference_2_1_4_2_1_0());
								}
							)
						)
					)
					otherlv_26=')'
					{
						newLeafNode(otherlv_26, grammarAccess.getTemporalPrimaryExprAccess().getRightParenthesisKeyword_2_1_4_3());
					}
				)
				    |
				(
					(
						(
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getTemporalPrimaryExprRule());
								}
							}
							otherlv_27=RULE_ID
							{
								newLeafNode(otherlv_27, grammarAccess.getTemporalPrimaryExprAccess().getPointerReferrableCrossReference_2_1_5_0_0());
							}
						)
					)
					(
						(
							lv_operator_28_0='.all'
							{
								newLeafNode(lv_operator_28_0, grammarAccess.getTemporalPrimaryExprAccess().getOperatorAllKeyword_2_1_5_1_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getTemporalPrimaryExprRule());
								}
								setWithLastConsumed($current, "operator", lv_operator_28_0, ".all");
							}
						)
					)
				)
				    |
				(
					(
						(
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getTemporalPrimaryExprRule());
								}
							}
							otherlv_29=RULE_ID
							{
								newLeafNode(otherlv_29, grammarAccess.getTemporalPrimaryExprAccess().getPointerReferrableCrossReference_2_1_6_0_0());
							}
						)
					)
					(
						(
							lv_operator_30_0='.any'
							{
								newLeafNode(lv_operator_30_0, grammarAccess.getTemporalPrimaryExprAccess().getOperatorAnyKeyword_2_1_6_1_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getTemporalPrimaryExprRule());
								}
								setWithLastConsumed($current, "operator", lv_operator_30_0, ".any");
							}
						)
					)
				)
				    |
				(
					(
						(
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getTemporalPrimaryExprRule());
								}
							}
							otherlv_31=RULE_ID
							{
								newLeafNode(otherlv_31, grammarAccess.getTemporalPrimaryExprAccess().getPointerReferrableCrossReference_2_1_7_0_0());
							}
						)
					)
					(
						(
							lv_operator_32_0='.prod'
							{
								newLeafNode(lv_operator_32_0, grammarAccess.getTemporalPrimaryExprAccess().getOperatorProdKeyword_2_1_7_1_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getTemporalPrimaryExprRule());
								}
								setWithLastConsumed($current, "operator", lv_operator_32_0, ".prod");
							}
						)
					)
				)
				    |
				(
					(
						(
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getTemporalPrimaryExprRule());
								}
							}
							otherlv_33=RULE_ID
							{
								newLeafNode(otherlv_33, grammarAccess.getTemporalPrimaryExprAccess().getPointerReferrableCrossReference_2_1_8_0_0());
							}
						)
					)
					(
						(
							lv_operator_34_0='.sum'
							{
								newLeafNode(lv_operator_34_0, grammarAccess.getTemporalPrimaryExprAccess().getOperatorSumKeyword_2_1_8_1_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getTemporalPrimaryExprRule());
								}
								setWithLastConsumed($current, "operator", lv_operator_34_0, ".sum");
							}
						)
					)
				)
				    |
				(
					(
						(
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getTemporalPrimaryExprRule());
								}
							}
							otherlv_35=RULE_ID
							{
								newLeafNode(otherlv_35, grammarAccess.getTemporalPrimaryExprAccess().getPointerReferrableCrossReference_2_1_9_0_0());
							}
						)
					)
					(
						(
							lv_operator_36_0='.min'
							{
								newLeafNode(lv_operator_36_0, grammarAccess.getTemporalPrimaryExprAccess().getOperatorMinKeyword_2_1_9_1_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getTemporalPrimaryExprRule());
								}
								setWithLastConsumed($current, "operator", lv_operator_36_0, ".min");
							}
						)
					)
				)
				    |
				(
					(
						(
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getTemporalPrimaryExprRule());
								}
							}
							otherlv_37=RULE_ID
							{
								newLeafNode(otherlv_37, grammarAccess.getTemporalPrimaryExprAccess().getPointerReferrableCrossReference_2_1_10_0_0());
							}
						)
					)
					(
						(
							lv_operator_38_0='.max'
							{
								newLeafNode(lv_operator_38_0, grammarAccess.getTemporalPrimaryExprAccess().getOperatorMaxKeyword_2_1_10_1_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getTemporalPrimaryExprRule());
								}
								setWithLastConsumed($current, "operator", lv_operator_38_0, ".max");
							}
						)
					)
				)
			)
		)
	)
;

// Entry rule entryRuleSubrange
entryRuleSubrange returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSubrangeRule()); }
	iv_ruleSubrange=ruleSubrange
	{ $current=$iv_ruleSubrange.current; }
	EOF;

// Rule Subrange
ruleSubrange returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getSubrangeAccess().getFromSizeDefineDeclParserRuleCall_0_0());
				}
				lv_from_0_0=ruleSizeDefineDecl
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSubrangeRule());
					}
					set(
						$current,
						"from",
						lv_from_0_0,
						"tau.smlab.syntech.Spectra.SizeDefineDecl");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='..'
		{
			newLeafNode(otherlv_1, grammarAccess.getSubrangeAccess().getFullStopFullStopKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSubrangeAccess().getToSizeDefineDeclParserRuleCall_2_0());
				}
				lv_to_2_0=ruleSizeDefineDecl
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSubrangeRule());
					}
					set(
						$current,
						"to",
						lv_to_2_0,
						"tau.smlab.syntech.Spectra.SizeDefineDecl");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleConstant
entryRuleConstant returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConstantRule()); }
	iv_ruleConstant=ruleConstant
	{ $current=$iv_ruleConstant.current; }
	EOF;

// Rule Constant
ruleConstant returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getConstantAccess().getConstantAction_0(),
					$current);
			}
		)
		(
			(
				(
					lv_booleanValue_1_0='FALSE'
					{
						newLeafNode(lv_booleanValue_1_0, grammarAccess.getConstantAccess().getBooleanValueFALSEKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConstantRule());
						}
						setWithLastConsumed($current, "booleanValue", lv_booleanValue_1_0, "FALSE");
					}
				)
			)
			    |
			(
				(
					lv_booleanValue_2_0='false'
					{
						newLeafNode(lv_booleanValue_2_0, grammarAccess.getConstantAccess().getBooleanValueFalseKeyword_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConstantRule());
						}
						setWithLastConsumed($current, "booleanValue", lv_booleanValue_2_0, "false");
					}
				)
			)
			    |
			(
				(
					lv_booleanValue_3_0='TRUE'
					{
						newLeafNode(lv_booleanValue_3_0, grammarAccess.getConstantAccess().getBooleanValueTRUEKeyword_1_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConstantRule());
						}
						setWithLastConsumed($current, "booleanValue", lv_booleanValue_3_0, "TRUE");
					}
				)
			)
			    |
			(
				(
					lv_booleanValue_4_0='true'
					{
						newLeafNode(lv_booleanValue_4_0, grammarAccess.getConstantAccess().getBooleanValueTrueKeyword_1_3_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConstantRule());
						}
						setWithLastConsumed($current, "booleanValue", lv_booleanValue_4_0, "true");
					}
				)
			)
			    |
			(
				(
					lv_integerValue_5_0=RULE_INT
					{
						newLeafNode(lv_integerValue_5_0, grammarAccess.getConstantAccess().getIntegerValueINTTerminalRuleCall_1_4_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConstantRule());
						}
						setWithLastConsumed(
							$current,
							"integerValue",
							lv_integerValue_5_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)
	)
;

// Entry rule entryRuleTrigger
entryRuleTrigger returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTriggerRule()); }
	iv_ruleTrigger=ruleTrigger
	{ $current=$iv_ruleTrigger.current; }
	EOF;

// Rule Trigger
ruleTrigger returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getTriggerAccess().getTriggerAction_0(),
					$current);
			}
		)
		otherlv_1='trig'
		{
			newLeafNode(otherlv_1, grammarAccess.getTriggerAccess().getTrigKeyword_1());
		}
		(
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTriggerRule());
						}
					}
					otherlv_2=RULE_ID
					{
						newLeafNode(otherlv_2, grammarAccess.getTriggerAccess().getInitPointerDefineRegExpDeclCrossReference_2_0_0());
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getTriggerAccess().getInitRegExpRegExpParserRuleCall_2_1_0());
					}
					lv_initRegExp_3_0=ruleRegExp
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTriggerRule());
						}
						set(
							$current,
							"initRegExp",
							lv_initRegExp_3_0,
							"tau.smlab.syntech.Spectra.RegExp");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		otherlv_4='|=>'
		{
			newLeafNode(otherlv_4, grammarAccess.getTriggerAccess().getVerticalLineEqualsSignGreaterThanSignKeyword_3());
		}
		(
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTriggerRule());
						}
					}
					otherlv_5=RULE_ID
					{
						newLeafNode(otherlv_5, grammarAccess.getTriggerAccess().getEffectPointerDefineRegExpDeclCrossReference_4_0_0());
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getTriggerAccess().getEffectRegExpRegExpParserRuleCall_4_1_0());
					}
					lv_effectRegExp_6_0=ruleRegExp
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTriggerRule());
						}
						set(
							$current,
							"effectRegExp",
							lv_effectRegExp_6_0,
							"tau.smlab.syntech.Spectra.RegExp");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleRegExp
entryRuleRegExp returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRegExpRule()); }
	iv_ruleRegExp=ruleRegExp
	{ $current=$iv_ruleRegExp.current; }
	EOF;

// Rule RegExp
ruleRegExp returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getRegExpAccess().getBinaryRegExpParserRuleCall());
	}
	this_BinaryRegExp_0=ruleBinaryRegExp
	{
		$current = $this_BinaryRegExp_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleBinaryRegExp
entryRuleBinaryRegExp returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBinaryRegExpRule()); }
	iv_ruleBinaryRegExp=ruleBinaryRegExp
	{ $current=$iv_ruleBinaryRegExp.current; }
	EOF;

// Rule BinaryRegExp
ruleBinaryRegExp returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getBinaryRegExpAccess().getUnaryRegExpParserRuleCall_0());
		}
		this_UnaryRegExp_0=ruleUnaryRegExp
		{
			$current = $this_UnaryRegExp_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getBinaryRegExpAccess().getBinaryRegExpLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					(
						lv_op_2_1='&'
						{
							newLeafNode(lv_op_2_1, grammarAccess.getBinaryRegExpAccess().getOpAmpersandKeyword_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getBinaryRegExpRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_1, null);
						}
						    |
						lv_op_2_2='|'
						{
							newLeafNode(lv_op_2_2, grammarAccess.getBinaryRegExpAccess().getOpVerticalLineKeyword_1_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getBinaryRegExpRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_2, null);
						}
					)
				)
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getBinaryRegExpAccess().getRightUnaryRegExpParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleUnaryRegExp
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBinaryRegExpRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"tau.smlab.syntech.Spectra.UnaryRegExp");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleUnaryRegExp
entryRuleUnaryRegExp returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUnaryRegExpRule()); }
	iv_ruleUnaryRegExp=ruleUnaryRegExp
	{ $current=$iv_ruleUnaryRegExp.current; }
	EOF;

// Rule UnaryRegExp
ruleUnaryRegExp returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getUnaryRegExpAccess().getCompRegExpParserRuleCall_0());
		}
		this_CompRegExp_0=ruleCompRegExp
		{
			$current = $this_CompRegExp_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getUnaryRegExpAccess().getUnaryRegExpLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					(
						lv_kleened_2_0='*'
						{
							newLeafNode(lv_kleened_2_0, grammarAccess.getUnaryRegExpAccess().getKleenedAsteriskKeyword_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getUnaryRegExpRule());
							}
							setWithLastConsumed($current, "kleened", lv_kleened_2_0 != null, "*");
						}
					)
				)
				    |
				(
					(
						lv_questionMark_3_0='?'
						{
							newLeafNode(lv_questionMark_3_0, grammarAccess.getUnaryRegExpAccess().getQuestionMarkQuestionMarkKeyword_1_1_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getUnaryRegExpRule());
							}
							setWithLastConsumed($current, "questionMark", lv_questionMark_3_0 != null, "?");
						}
					)
				)
				    |
				(
					(
						lv_plus_4_0='+'
						{
							newLeafNode(lv_plus_4_0, grammarAccess.getUnaryRegExpAccess().getPlusPlusSignKeyword_1_1_2_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getUnaryRegExpRule());
							}
							setWithLastConsumed($current, "plus", lv_plus_4_0 != null, "+");
						}
					)
				)
				    |
				(
					(
						(
							lv_haveExactRepetition_5_0='{'
							{
								newLeafNode(lv_haveExactRepetition_5_0, grammarAccess.getUnaryRegExpAccess().getHaveExactRepetitionLeftCurlyBracketKeyword_1_1_3_0_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getUnaryRegExpRule());
								}
								setWithLastConsumed($current, "haveExactRepetition", lv_haveExactRepetition_5_0 != null, "{");
							}
						)
					)
					(
						(
							lv_exactRepetition_6_0=RULE_INT
							{
								newLeafNode(lv_exactRepetition_6_0, grammarAccess.getUnaryRegExpAccess().getExactRepetitionINTTerminalRuleCall_1_1_3_1_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getUnaryRegExpRule());
								}
								setWithLastConsumed(
									$current,
									"exactRepetition",
									lv_exactRepetition_6_0,
									"org.eclipse.xtext.common.Terminals.INT");
							}
						)
					)
					otherlv_7='}'
					{
						newLeafNode(otherlv_7, grammarAccess.getUnaryRegExpAccess().getRightCurlyBracketKeyword_1_1_3_2());
					}
				)
				    |
				(
					(
						(
							lv_haveAtLeast_8_0='{'
							{
								newLeafNode(lv_haveAtLeast_8_0, grammarAccess.getUnaryRegExpAccess().getHaveAtLeastLeftCurlyBracketKeyword_1_1_4_0_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getUnaryRegExpRule());
								}
								setWithLastConsumed($current, "haveAtLeast", lv_haveAtLeast_8_0 != null, "{");
							}
						)
					)
					(
						(
							lv_atLeast_9_0=RULE_INT
							{
								newLeafNode(lv_atLeast_9_0, grammarAccess.getUnaryRegExpAccess().getAtLeastINTTerminalRuleCall_1_1_4_1_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getUnaryRegExpRule());
								}
								setWithLastConsumed(
									$current,
									"atLeast",
									lv_atLeast_9_0,
									"org.eclipse.xtext.common.Terminals.INT");
							}
						)
					)
					otherlv_10=','
					{
						newLeafNode(otherlv_10, grammarAccess.getUnaryRegExpAccess().getCommaKeyword_1_1_4_2());
					}
					otherlv_11='}'
					{
						newLeafNode(otherlv_11, grammarAccess.getUnaryRegExpAccess().getRightCurlyBracketKeyword_1_1_4_3());
					}
				)
				    |
				(
					(
						(
							lv_haveRange_12_0='{'
							{
								newLeafNode(lv_haveRange_12_0, grammarAccess.getUnaryRegExpAccess().getHaveRangeLeftCurlyBracketKeyword_1_1_5_0_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getUnaryRegExpRule());
								}
								setWithLastConsumed($current, "haveRange", lv_haveRange_12_0 != null, "{");
							}
						)
					)
					(
						(
							(
								lv_from_13_0=RULE_INT
								{
									newLeafNode(lv_from_13_0, grammarAccess.getUnaryRegExpAccess().getFromINTTerminalRuleCall_1_1_5_1_0_0());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getUnaryRegExpRule());
									}
									setWithLastConsumed(
										$current,
										"from",
										lv_from_13_0,
										"org.eclipse.xtext.common.Terminals.INT");
								}
							)
						)
						    |
						(
							(
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getUnaryRegExpRule());
									}
								}
								otherlv_14=RULE_ID
								{
									newLeafNode(otherlv_14, grammarAccess.getUnaryRegExpAccess().getFromDefineDefineDeclCrossReference_1_1_5_1_1_0());
								}
							)
						)
					)
					otherlv_15=','
					{
						newLeafNode(otherlv_15, grammarAccess.getUnaryRegExpAccess().getCommaKeyword_1_1_5_2());
					}
					(
						(
							(
								lv_to_16_0=RULE_INT
								{
									newLeafNode(lv_to_16_0, grammarAccess.getUnaryRegExpAccess().getToINTTerminalRuleCall_1_1_5_3_0_0());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getUnaryRegExpRule());
									}
									setWithLastConsumed(
										$current,
										"to",
										lv_to_16_0,
										"org.eclipse.xtext.common.Terminals.INT");
								}
							)
						)
						    |
						(
							(
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getUnaryRegExpRule());
									}
								}
								otherlv_17=RULE_ID
								{
									newLeafNode(otherlv_17, grammarAccess.getUnaryRegExpAccess().getToDefineDefineDeclCrossReference_1_1_5_3_1_0());
								}
							)
						)
					)
					otherlv_18='}'
					{
						newLeafNode(otherlv_18, grammarAccess.getUnaryRegExpAccess().getRightCurlyBracketKeyword_1_1_5_4());
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleCompRegExp
entryRuleCompRegExp returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCompRegExpRule()); }
	iv_ruleCompRegExp=ruleCompRegExp
	{ $current=$iv_ruleCompRegExp.current; }
	EOF;

// Rule CompRegExp
ruleCompRegExp returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getCompRegExpAccess().getPrimaryRegExpParserRuleCall_0());
		}
		this_PrimaryRegExp_0=rulePrimaryRegExp
		{
			$current = $this_PrimaryRegExp_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getCompRegExpAccess().getCompRegExpAction_1_0(),
						$current);
				}
			)
			(
				(
					lv_comp_2_0='~'
					{
						newLeafNode(lv_comp_2_0, grammarAccess.getCompRegExpAccess().getCompTildeKeyword_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCompRegExpRule());
						}
						setWithLastConsumed($current, "comp", lv_comp_2_0, "~");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getCompRegExpAccess().getLeftCompRegExpParserRuleCall_1_2_0());
					}
					lv_left_3_0=ruleCompRegExp
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCompRegExpRule());
						}
						set(
							$current,
							"left",
							lv_left_3_0,
							"tau.smlab.syntech.Spectra.CompRegExp");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRulePrimaryRegExp
entryRulePrimaryRegExp returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrimaryRegExpRule()); }
	iv_rulePrimaryRegExp=rulePrimaryRegExp
	{ $current=$iv_rulePrimaryRegExp.current; }
	EOF;

// Rule PrimaryRegExp
rulePrimaryRegExp returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='('
			{
				newLeafNode(otherlv_0, grammarAccess.getPrimaryRegExpAccess().getLeftParenthesisKeyword_0_0());
			}
			{
				newCompositeNode(grammarAccess.getPrimaryRegExpAccess().getRegExpParserRuleCall_0_1());
			}
			this_RegExp_1=ruleRegExp
			{
				$current = $this_RegExp_1.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_2=')'
			{
				newLeafNode(otherlv_2, grammarAccess.getPrimaryRegExpAccess().getRightParenthesisKeyword_0_2());
			}
		)
		    |
		(
			(
				(
					lv_val_3_1='TRUE'
					{
						newLeafNode(lv_val_3_1, grammarAccess.getPrimaryRegExpAccess().getValTRUEKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPrimaryRegExpRule());
						}
						setWithLastConsumed($current, "val", lv_val_3_1, null);
					}
					    |
					lv_val_3_2='FALSE'
					{
						newLeafNode(lv_val_3_2, grammarAccess.getPrimaryRegExpAccess().getValFALSEKeyword_1_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPrimaryRegExpRule());
						}
						setWithLastConsumed($current, "val", lv_val_3_2, null);
					}
					    |
					lv_val_3_3='true'
					{
						newLeafNode(lv_val_3_3, grammarAccess.getPrimaryRegExpAccess().getValTrueKeyword_1_0_2());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPrimaryRegExpRule());
						}
						setWithLastConsumed($current, "val", lv_val_3_3, null);
					}
					    |
					lv_val_3_4='false'
					{
						newLeafNode(lv_val_3_4, grammarAccess.getPrimaryRegExpAccess().getValFalseKeyword_1_0_3());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPrimaryRegExpRule());
						}
						setWithLastConsumed($current, "val", lv_val_3_4, null);
					}
				)
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getPrimaryRegExpAccess().getAssrtBooleanTermParserRuleCall_2_0());
				}
				lv_assrt_4_0=ruleBooleanTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPrimaryRegExpRule());
					}
					set(
						$current,
						"assrt",
						lv_assrt_4_0,
						"tau.smlab.syntech.Spectra.BooleanTerm");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				lv_empty_5_0='()'
				{
					newLeafNode(lv_empty_5_0, grammarAccess.getPrimaryRegExpAccess().getEmptyLeftParenthesisRightParenthesisKeyword_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPrimaryRegExpRule());
					}
					setWithLastConsumed($current, "empty", lv_empty_5_0 != null, "()");
				}
			)
		)
	)
;

// Entry rule entryRuleBooleanTerm
entryRuleBooleanTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBooleanTermRule()); }
	iv_ruleBooleanTerm=ruleBooleanTerm
	{ $current=$iv_ruleBooleanTerm.current; }
	EOF;

// Rule BooleanTerm
ruleBooleanTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getBooleanTermAccess().getBooleanTermAction_0(),
					$current);
			}
		)
		otherlv_1='['
		{
			newLeafNode(otherlv_1, grammarAccess.getBooleanTermAccess().getLeftSquareBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBooleanTermAccess().getRelExprTemporalInExprParserRuleCall_2_0());
				}
				lv_relExpr_2_0=ruleTemporalInExpr
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBooleanTermRule());
					}
					set(
						$current,
						"relExpr",
						lv_relExpr_2_0,
						"tau.smlab.syntech.Spectra.TemporalInExpr");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=']'
		{
			newLeafNode(otherlv_3, grammarAccess.getBooleanTermAccess().getRightSquareBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleValueInRange
entryRuleValueInRange returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getValueInRangeRule()); }
	iv_ruleValueInRange=ruleValueInRange
	{ $current=$iv_ruleValueInRange.current; }
	EOF;

// Rule ValueInRange
ruleValueInRange returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getValueInRangeRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getValueInRangeAccess().getConstTypeConstantCrossReference_0_0());
				}
			)
		)
		    |
		(
			(
				lv_int_1_0=RULE_INT
				{
					newLeafNode(lv_int_1_0, grammarAccess.getValueInRangeAccess().getIntINTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getValueInRangeRule());
					}
					setWithLastConsumed(
						$current,
						"int",
						lv_int_1_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		    |
		(
			(
				(
					lv_from_2_0=RULE_INT
					{
						newLeafNode(lv_from_2_0, grammarAccess.getValueInRangeAccess().getFromINTTerminalRuleCall_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getValueInRangeRule());
						}
						setWithLastConsumed(
							$current,
							"from",
							lv_from_2_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
			(
				(
					lv_multi_3_0='-'
					{
						newLeafNode(lv_multi_3_0, grammarAccess.getValueInRangeAccess().getMultiHyphenMinusKeyword_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getValueInRangeRule());
						}
						setWithLastConsumed($current, "multi", lv_multi_3_0 != null, "-");
					}
				)
			)
			(
				(
					lv_to_4_0=RULE_INT
					{
						newLeafNode(lv_to_4_0, grammarAccess.getValueInRangeAccess().getToINTTerminalRuleCall_2_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getValueInRangeRule());
						}
						setWithLastConsumed(
							$current,
							"to",
							lv_to_4_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)
		    |
		(
			(
				(
					lv_booleanValue_5_1='TRUE'
					{
						newLeafNode(lv_booleanValue_5_1, grammarAccess.getValueInRangeAccess().getBooleanValueTRUEKeyword_3_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getValueInRangeRule());
						}
						setWithLastConsumed($current, "booleanValue", lv_booleanValue_5_1, null);
					}
					    |
					lv_booleanValue_5_2='FALSE'
					{
						newLeafNode(lv_booleanValue_5_2, grammarAccess.getValueInRangeAccess().getBooleanValueFALSEKeyword_3_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getValueInRangeRule());
						}
						setWithLastConsumed($current, "booleanValue", lv_booleanValue_5_2, null);
					}
					    |
					lv_booleanValue_5_3='true'
					{
						newLeafNode(lv_booleanValue_5_3, grammarAccess.getValueInRangeAccess().getBooleanValueTrueKeyword_3_0_2());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getValueInRangeRule());
						}
						setWithLastConsumed($current, "booleanValue", lv_booleanValue_5_3, null);
					}
					    |
					lv_booleanValue_5_4='false'
					{
						newLeafNode(lv_booleanValue_5_4, grammarAccess.getValueInRangeAccess().getBooleanValueFalseKeyword_3_0_3());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getValueInRangeRule());
						}
						setWithLastConsumed($current, "booleanValue", lv_booleanValue_5_4, null);
					}
				)
			)
		)
	)
;

// Entry rule entryRuleQuantifierExpr
entryRuleQuantifierExpr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getQuantifierExprRule()); }
	iv_ruleQuantifierExpr=ruleQuantifierExpr
	{ $current=$iv_ruleQuantifierExpr.current; }
	EOF;

// Rule QuantifierExpr
ruleQuantifierExpr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getQuantifierExprAccess().getTemporalInExprParserRuleCall_0());
		}
		this_TemporalInExpr_0=ruleTemporalInExpr
		{
			$current = $this_TemporalInExpr_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getQuantifierExprAccess().getQuantifierExprAction_1_0(),
						$current);
				}
			)
			(
				(
					(
						(
							lv_operator_2_1='forall'
							{
								newLeafNode(lv_operator_2_1, grammarAccess.getQuantifierExprAccess().getOperatorForallKeyword_1_1_0_0_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getQuantifierExprRule());
								}
								setWithLastConsumed($current, "operator", lv_operator_2_1, null);
							}
							    |
							lv_operator_2_2='exists'
							{
								newLeafNode(lv_operator_2_2, grammarAccess.getQuantifierExprAccess().getOperatorExistsKeyword_1_1_0_0_1());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getQuantifierExprRule());
								}
								setWithLastConsumed($current, "operator", lv_operator_2_2, null);
							}
						)
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getQuantifierExprAccess().getDomainVarDomainVarDeclParserRuleCall_1_1_1_0());
						}
						lv_domainVar_3_0=ruleDomainVarDecl
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getQuantifierExprRule());
							}
							set(
								$current,
								"domainVar",
								lv_domainVar_3_0,
								"tau.smlab.syntech.Spectra.DomainVarDecl");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_4='.'
				{
					newLeafNode(otherlv_4, grammarAccess.getQuantifierExprAccess().getFullStopKeyword_1_1_2());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getQuantifierExprAccess().getTemporalExprQuantifierExprParserRuleCall_1_1_3_0());
						}
						lv_temporalExpr_5_0=ruleQuantifierExpr
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getQuantifierExprRule());
							}
							set(
								$current,
								"temporalExpr",
								lv_temporalExpr_5_0,
								"tau.smlab.syntech.Spectra.QuantifierExpr");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)
	)
;

// Entry rule entryRuleDomainVarDecl
entryRuleDomainVarDecl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDomainVarDeclRule()); }
	iv_ruleDomainVarDecl=ruleDomainVarDecl
	{ $current=$iv_ruleDomainVarDecl.current; }
	EOF;

// Rule DomainVarDecl
ruleDomainVarDecl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getDomainVarDeclAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDomainVarDeclRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1='in'
		{
			newLeafNode(otherlv_1, grammarAccess.getDomainVarDeclAccess().getInKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDomainVarDeclAccess().getDomainTypeVarTypeParserRuleCall_2_0());
				}
				lv_domainType_2_0=ruleVarType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDomainVarDeclRule());
					}
					set(
						$current,
						"domainType",
						lv_domainType_2_0,
						"tau.smlab.syntech.Spectra.VarType");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleSizeDefineDecl
entryRuleSizeDefineDecl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSizeDefineDeclRule()); }
	iv_ruleSizeDefineDecl=ruleSizeDefineDecl
	{ $current=$iv_ruleSizeDefineDecl.current; }
	EOF;

// Rule SizeDefineDecl
ruleSizeDefineDecl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_value_0_0=RULE_INT
				{
					newLeafNode(lv_value_0_0, grammarAccess.getSizeDefineDeclAccess().getValueINTTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSizeDefineDeclRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_0_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		    |
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSizeDefineDeclRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getSizeDefineDeclAccess().getNameDefineDeclCrossReference_1_0());
				}
			)
		)
		    |
		(
			otherlv_2='('
			{
				newLeafNode(otherlv_2, grammarAccess.getSizeDefineDeclAccess().getLeftParenthesisKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSizeDefineDeclAccess().getArithExpTemporalExpressionParserRuleCall_2_1_0());
					}
					lv_arithExp_3_0=ruleTemporalExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSizeDefineDeclRule());
						}
						set(
							$current,
							"arithExp",
							lv_arithExp_3_0,
							"tau.smlab.syntech.Spectra.TemporalExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_4=')'
			{
				newLeafNode(otherlv_4, grammarAccess.getSizeDefineDeclAccess().getRightParenthesisKeyword_2_2());
			}
		)
	)
;

// Entry rule entryRuleTOK_SEMI
entryRuleTOK_SEMI returns [String current=null]:
	{ newCompositeNode(grammarAccess.getTOK_SEMIRule()); }
	iv_ruleTOK_SEMI=ruleTOK_SEMI
	{ $current=$iv_ruleTOK_SEMI.current.getText(); }
	EOF;

// Rule TOK_SEMI
ruleTOK_SEMI returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw=';'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getTOK_SEMIAccess().getSemicolonKeyword());
	}
;

// Rule VarOwner
ruleVarOwner returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='output'
			{
				$current = grammarAccess.getVarOwnerAccess().getSYSEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getVarOwnerAccess().getSYSEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='out'
			{
				$current = grammarAccess.getVarOwnerAccess().getSYSEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getVarOwnerAccess().getSYSEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='sysvar'
			{
				$current = grammarAccess.getVarOwnerAccess().getSYSEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getVarOwnerAccess().getSYSEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='sys'
			{
				$current = grammarAccess.getVarOwnerAccess().getSYSEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getVarOwnerAccess().getSYSEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='input'
			{
				$current = grammarAccess.getVarOwnerAccess().getENVEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getVarOwnerAccess().getENVEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='in'
			{
				$current = grammarAccess.getVarOwnerAccess().getENVEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getVarOwnerAccess().getENVEnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6='envvar'
			{
				$current = grammarAccess.getVarOwnerAccess().getENVEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getVarOwnerAccess().getENVEnumLiteralDeclaration_6());
			}
		)
		    |
		(
			enumLiteral_7='env'
			{
				$current = grammarAccess.getVarOwnerAccess().getENVEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_7, grammarAccess.getVarOwnerAccess().getENVEnumLiteralDeclaration_7());
			}
		)
		    |
		(
			enumLiteral_8='auxvar'
			{
				$current = grammarAccess.getVarOwnerAccess().getAUXEnumLiteralDeclaration_8().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_8, grammarAccess.getVarOwnerAccess().getAUXEnumLiteralDeclaration_8());
			}
		)
		    |
		(
			enumLiteral_9='aux'
			{
				$current = grammarAccess.getVarOwnerAccess().getAUXEnumLiteralDeclaration_9().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_9, grammarAccess.getVarOwnerAccess().getAUXEnumLiteralDeclaration_9());
			}
		)
	)
;

// Rule OverflowMethod
ruleOverflowMethod returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='keep'
			{
				$current = grammarAccess.getOverflowMethodAccess().getKEEPEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getOverflowMethodAccess().getKEEPEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='false'
			{
				$current = grammarAccess.getOverflowMethodAccess().getFALSEEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getOverflowMethodAccess().getFALSEEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='modulo'
			{
				$current = grammarAccess.getOverflowMethodAccess().getMODULOEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getOverflowMethodAccess().getMODULOEnumLiteralDeclaration_2());
			}
		)
	)
;

RULE_SL_COMMENT : ('//'|'--') ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
