/**
 * generated by Xtext 2.25.0
 */
package tau.smlab.syntech.spectra;

import org.eclipse.emf.common.util.EList;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Counter</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link tau.smlab.syntech.spectra.Counter#getRange <em>Range</em>}</li>
 *   <li>{@link tau.smlab.syntech.spectra.Counter#getInitial <em>Initial</em>}</li>
 *   <li>{@link tau.smlab.syntech.spectra.Counter#getResetPred <em>Reset Pred</em>}</li>
 *   <li>{@link tau.smlab.syntech.spectra.Counter#getIncPred <em>Inc Pred</em>}</li>
 *   <li>{@link tau.smlab.syntech.spectra.Counter#getDecPred <em>Dec Pred</em>}</li>
 *   <li>{@link tau.smlab.syntech.spectra.Counter#getOverflowMethod <em>Overflow Method</em>}</li>
 *   <li>{@link tau.smlab.syntech.spectra.Counter#getUnderflowMethod <em>Underflow Method</em>}</li>
 * </ul>
 *
 * @see tau.smlab.syntech.spectra.SpectraPackage#getCounter()
 * @model
 * @generated
 */
public interface Counter extends Decl, Referrable
{
  /**
   * Returns the value of the '<em><b>Range</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Range</em>' containment reference.
   * @see #setRange(Subrange)
   * @see tau.smlab.syntech.spectra.SpectraPackage#getCounter_Range()
   * @model containment="true"
   * @generated
   */
  Subrange getRange();

  /**
   * Sets the value of the '{@link tau.smlab.syntech.spectra.Counter#getRange <em>Range</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Range</em>' containment reference.
   * @see #getRange()
   * @generated
   */
  void setRange(Subrange value);

  /**
   * Returns the value of the '<em><b>Initial</b></em>' containment reference list.
   * The list contents are of type {@link tau.smlab.syntech.spectra.TemporalExpression}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Initial</em>' containment reference list.
   * @see tau.smlab.syntech.spectra.SpectraPackage#getCounter_Initial()
   * @model containment="true"
   * @generated
   */
  EList<TemporalExpression> getInitial();

  /**
   * Returns the value of the '<em><b>Reset Pred</b></em>' containment reference list.
   * The list contents are of type {@link tau.smlab.syntech.spectra.TemporalExpression}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Reset Pred</em>' containment reference list.
   * @see tau.smlab.syntech.spectra.SpectraPackage#getCounter_ResetPred()
   * @model containment="true"
   * @generated
   */
  EList<TemporalExpression> getResetPred();

  /**
   * Returns the value of the '<em><b>Inc Pred</b></em>' containment reference list.
   * The list contents are of type {@link tau.smlab.syntech.spectra.TemporalExpression}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Inc Pred</em>' containment reference list.
   * @see tau.smlab.syntech.spectra.SpectraPackage#getCounter_IncPred()
   * @model containment="true"
   * @generated
   */
  EList<TemporalExpression> getIncPred();

  /**
   * Returns the value of the '<em><b>Dec Pred</b></em>' containment reference list.
   * The list contents are of type {@link tau.smlab.syntech.spectra.TemporalExpression}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Dec Pred</em>' containment reference list.
   * @see tau.smlab.syntech.spectra.SpectraPackage#getCounter_DecPred()
   * @model containment="true"
   * @generated
   */
  EList<TemporalExpression> getDecPred();

  /**
   * Returns the value of the '<em><b>Overflow Method</b></em>' attribute list.
   * The list contents are of type {@link tau.smlab.syntech.spectra.OverflowMethod}.
   * The literals are from the enumeration {@link tau.smlab.syntech.spectra.OverflowMethod}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Overflow Method</em>' attribute list.
   * @see tau.smlab.syntech.spectra.OverflowMethod
   * @see tau.smlab.syntech.spectra.SpectraPackage#getCounter_OverflowMethod()
   * @model unique="false"
   * @generated
   */
  EList<OverflowMethod> getOverflowMethod();

  /**
   * Returns the value of the '<em><b>Underflow Method</b></em>' attribute list.
   * The list contents are of type {@link tau.smlab.syntech.spectra.OverflowMethod}.
   * The literals are from the enumeration {@link tau.smlab.syntech.spectra.OverflowMethod}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Underflow Method</em>' attribute list.
   * @see tau.smlab.syntech.spectra.OverflowMethod
   * @see tau.smlab.syntech.spectra.SpectraPackage#getCounter_UnderflowMethod()
   * @model unique="false"
   * @generated
   */
  EList<OverflowMethod> getUnderflowMethod();

} // Counter
